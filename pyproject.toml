[project]
name = "vidsgg"
version = "0.1.0"
description = "VidSgg"
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "opencv-python>=4.5.0",
    "tqdm>=4.62.0",
    "scipy>=1.9.0",
    "pillow>=8.3.0",
    "scikit-learn>=1.1.0",
    "openai>=1.86.0",
    "python-dotenv>=1.1.0",
    "imageio>=2.37.0",
    "h5py>=3.14.0",
    "easydict>=1.13",
    "PyYAML>=6.0.1",
    "filelock>=3.18.0",
    "typing-extensions>=4.10.0",
    "sympy>=1.13.1",
    "networkx>=3.4.2,<3.5",
    "jinja2>=3.1.6",
    "fsspec>=2025.5.1",
    "streamlit>=1.29.0",
    "streamlit-chat>=0.1.1",
    "plotly>=5.17.0",
    "requests>=2.31.0",
    # SceneLLM and FasterRCNN dependencies
    "transformers>=4.20.0",
    "peft>=0.4.0",
    "pot>=0.9.0",
    "cython",
    "cffi",
    "msgpack",
    "tensorboardX",
    "omegaconf>=2.3.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["lib", "dataloader"]

[tool.hatch.build.targets.sdist]
include = [
    "lib/**/*",
    "dataloader/**/*",
    "train.py",
    "demo.py",
    "README.md",
    "LICENSE",
]

[tool.hatch.build.targets.wheel.shared-data]
"lib" = "lib"
"dataloader" = "dataloader"

[tool.hatch.build.targets.sdist.shared-data]
"lib" = "lib"
"dataloader" = "dataloader"

[tool.hatch.envs.default]
dependencies = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
]

[tool.hatch.envs.docs]
dependencies = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.12.0",
    "myst-parser>=0.18.0",
    "sphinx-copybutton>=0.5.0",
    "sphinxcontrib-napoleon>=0.7",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=lib --cov=dataloader {args:tests}"

[tool.coverage.run]
source_pkgs = ["lib", "dataloader"]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "raise ImportError",
] 
