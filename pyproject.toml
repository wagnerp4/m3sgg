[project]
name = "m3sgg"
version = "0.1.0"
description = "M3SGG: Modular, multi-modal Scene Graph Generation Framework"
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "M3SGG Team", email = "m3sgg@example.com"}
]
keywords = ["scene-graph", "video-analysis", "computer-vision", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "opencv-python>=4.5.0",
    "tqdm>=4.62.0",
    "scipy>=1.9.0",
    "pillow>=8.3.0",
    "scikit-learn>=1.1.0",
    "openai>=1.86.0",
    "python-dotenv>=1.1.0",
    "imageio>=2.37.0",
    "h5py>=3.14.0",
    "easydict>=1.13",
    "PyYAML>=6.0.1",
    "filelock>=3.18.0",
    "typing-extensions>=4.10.0",
    "sympy>=1.13.1",
    "networkx>=3.4.2,<3.5",
    "jinja2>=3.1.6",
    "fsspec>=2025.5.1",
    "streamlit>=1.29.0",
    "streamlit-chat>=0.1.1",
    "plotly>=5.17.0",
    "requests>=2.31.0",
    # SceneLLM and FasterRCNN dependencies
    "transformers>=4.20.0",
    "peft>=0.4.0",
    "pot>=0.9.0",
    "cython",
    "cffi",
    "msgpack",
    "tensorboardX",
    "dill>=0.3.0",
    "omegaconf>=2.3.0",
    "click>=8.0.0",
    # VLM dependencies
    "timm>=0.4.12",
    # Note: PyTorch and torchvision are not included as dependencies
    # Users should install them separately based on their needs:
    # - For CPU: pip install torch torchvision
    # - For CUDA: pip install torch torchvision --index-url https://download.pytorch.org/whl/cu121
    "flake8>=7.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=6.3.0",
    "pytest-timeout>=2.4.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/m3sgg"]

[tool.hatch.build.targets.sdist]
include = [
    "src/**/*",
    "scripts/**/*",
    "fasterRCNN/**/*",
    "data/**/*",
    "assets/**/*",
    "docs/**/*",
    "README.md",
    "LICENSE",
]

[tool.hatch.build.targets.wheel.shared-data]
"src/m3sgg" = "m3sgg"

[tool.hatch.build.targets.sdist.shared-data]
"src/m3sgg" = "m3sgg"

[tool.hatch.envs.default]
dependencies = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-timeout>=2.0.0",
]

[tool.hatch.envs.summarization]
dependencies = [
    "sentencepiece>=0.1.99",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-timeout>=2.0.0",
    "flake8>=6.0",
    "black>=23.0",
    "isort>=5.12",
    "mypy>=1.0",
    "PyQt5>=5.15.0",
]
summarization = [
    "sentencepiece>=0.1.99",
]

[tool.hatch.envs.docs]
dependencies = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.12.0",
    "myst-parser>=0.18.0",
    "sphinx-copybutton>=0.5.0",
    "sphinxcontrib-napoleon>=0.7",
]

[project.scripts]
m3sgg = "m3sgg.cli.main:main"

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/m3sgg {args:tests}"

[tool.coverage.run]
source_pkgs = ["src/m3sgg"]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "raise ImportError",
] 
