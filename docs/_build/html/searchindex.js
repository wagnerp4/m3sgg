Search.setIndex({"docnames": ["api", "api/dataloader", "api/lib", "api/models", "changelog", "contributing", "datasets", "evaluation", "index", "installation", "license", "models", "training", "usage"], "filenames": ["api.rst", "api\\dataloader.rst", "api\\lib.rst", "api\\models.rst", "changelog.rst", "contributing.rst", "datasets.rst", "evaluation.rst", "index.rst", "installation.rst", "license.rst", "models.rst", "training.rst", "usage.rst"], "titles": ["API Reference", "Dataloader Module", "Library Module", "Models", "Changelog", "Contributing", "Datasets", "Evaluation Guide", "DLHM VidSGG Documentation", "Installation", "License", "Models", "Training Guide", "Usage Guide"], "terms": {"thi": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "section": [0, 3, 5, 6, 11], "provid": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13], "detail": [0, 5, 6, 7, 10, 11, 13], "dlhm": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13], "vidsgg": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13], "project": [0, 3, 4, 5, 8, 9, 10], "modul": [0, 3, 4, 6, 7, 8, 9], "dataload": [0, 5, 6, 8, 9, 12], "action": [0, 4, 5, 8, 12, 13], "genom": [0, 4, 5, 8, 12, 13], "easg": [0, 2, 3, 4, 7, 8, 12, 13], "visual": [0, 4, 8, 11, 13], "librari": [0, 3, 7, 8], "nlp": [0, 8], "fpn": 0, "model": [0, 1, 2, 4, 6, 7, 8, 9, 10], "sttran": [0, 2, 4, 7, 8], "scenellm": [0, 2, 4, 7, 8], "tempura": [0, 2, 4, 5, 7, 8], "stket": [0, 2, 4, 7, 8, 12], "transform": [0, 2, 4, 8, 10, 11], "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13], "consist": [0, 1, 4, 6, 7, 11], "sever": [0, 6, 10, 11], "kei": [0, 7, 11, 13], "handl": [0, 1, 2, 3, 4], "dataset": [0, 1, 2, 3, 4, 8, 11], "load": [0, 1, 2, 4, 5, 7, 11, 12, 13], "preprocess": [0, 1, 4, 5, 7, 11, 12, 13], "contain": [0, 2, 3, 6, 13], "function": [0, 1, 3, 4, 5, 6, 7, 8], "includ": [0, 2, 5, 6, 7, 10, 13], "util": [0, 4, 6, 11, 12], "process": [0, 2, 4, 7, 8, 9, 11, 13], "implement": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13], "variou": [0, 3, 7, 10, 12, 13], "sgg": [0, 3, 4, 8, 13], "other": [0, 5, 10, 13], "differ": [1, 2, 3, 7, 11, 12, 13], "video": [1, 2, 4, 6, 7, 8, 9, 10, 11, 13], "scene": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12], "graph": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12], "class": [1, 2, 3, 5, 6, 7, 11], "action_genom": [1, 6, 7, 9, 11, 12, 13], "ag": 1, "mode": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12], "datas": [1, 7, 12, 13], "data_path": [1, 5, 6, 7, 11, 12, 13], "none": [1, 2, 3], "filter_nonperson_box_fram": 1, "true": [1, 3, 5, 6, 7, 11, 12], "filter_small_box": 1, "fals": [1, 2, 3, 6, 7, 12], "print_stat": [1, 2], "sourc": [1, 2, 3, 5, 9, 10], "base": [1, 2, 3, 4, 5, 6, 10], "__init__": [1, 2, 3, 5, 6, 11], "valid_num": 1, "accord": [1, 9], "stanford": [1, 2], "method": [1, 2, 3, 6], "remov": [1, 4], "frame": [1, 3, 6, 7, 9, 11, 13], "without": [1, 2, 10], "person": [1, 2, 6, 10], "box": [1, 2, 3, 6, 7, 12, 13], "both": [1, 2, 3, 7, 13], "train": [1, 2, 3, 4, 5, 6, 7, 8, 9], "test": [1, 4, 6, 7, 8, 11, 12], "still": 1, "us": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13], "fasterrcnn": [1, 2, 4], "mai": [1, 10], "find": 1, "type": [1, 2, 3, 6, 7, 12], "default": [1, 2, 3, 12, 13], "cuda_collate_fn": 1, "batch": [1, 6, 7, 9, 11, 12, 13], "proper": [1, 5, 9, 13], "collat": 1, "variabl": [1, 2], "length": [1, 2, 3, 5], "sequenc": [1, 2, 3], "ensur": [1, 5, 7, 9, 10, 12, 13], "size": [1, 2, 3, 6, 7, 9, 11, 12, 13], "split": [1, 5, 6, 7], "don": [1, 2], "t": [1, 2, 3, 7], "need": [1, 2, 3, 5], "zip": [1, 7], "tensor": [1, 2, 3], "lib": [2, 3, 5, 9, 11], "config": [2, 3, 5, 9, 11, 12, 13], "gener": [2, 3, 6, 7, 8, 10, 11, 12], "manag": [2, 4, 6], "all": [2, 3, 4, 5, 7, 10], "paramet": [2, 3, 5, 7, 8, 11], "architectur": [2, 3, 7, 11, 12, 13], "It": 2, "command": [2, 8], "line": [2, 5, 8], "argument": [2, 13], "pars": 2, "set": [2, 3, 7, 9, 12], "appropri": [2, 5, 9], "infer": [2, 4, 7, 9, 11], "initi": [2, 3, 4, 5, 6], "up": [2, 9], "path": [2, 9, 12, 13], "hyperparamet": [2, 8], "specif": [2, 3, 4, 5, 6, 8, 10, 11], "return": [2, 3, 5, 6, 7, 12], "setup_pars": 2, "parser": 2, "creat": [2, 3, 5, 6, 7], "an": [2, 10], "argumentpars": 2, "avail": [2, 9], "option": [2, 3, 5, 13], "select": [2, 3, 8, 12], "instanc": [2, 3], "object_detector": 2, "detector": 2, "object_class": 2, "use_suppli": 2, "predcl": [2, 3, 4, 6, 8, 12], "faster": [2, 6, 7, 9, 10, 12, 13], "r": [2, 3, 7, 9], "cnn": 2, "backbon": 2, "task": [2, 3, 7, 13], "sgcl": [2, 3, 4, 8, 11, 12], "sgdet": [2, 3, 4, 8, 11, 12], "nn": [2, 3, 11], "pytorch": [2, 3, 5, 9, 10], "bool": [2, 3, 5], "whether": [2, 10], "list": [2, 3, 10], "name": [2, 3, 9], "suppli": 2, "relat": [2, 3, 4, 5, 11], "str": [2, 3, 5], "forward": [2, 3, 5, 11], "im_data": 2, "im_info": 2, "gt_box": 2, "num_box": 2, "gt_annot": 2, "im_al": 2, "defin": [2, 3, 11], "comput": [2, 3, 7, 10], "perform": [2, 3, 4, 5, 8, 9], "everi": [2, 3], "call": [2, 3], "should": [2, 3, 5], "overridden": [2, 3], "subclass": [2, 3], "although": [2, 3], "recip": [2, 3], "pass": [2, 3, 5, 6, 11], "within": [2, 3, 11], "one": [2, 3], "afterward": [2, 3], "instead": [2, 3], "sinc": [2, 3], "former": [2, 3], "take": [2, 3], "care": [2, 3], "run": [2, 3, 13], "regist": [2, 3], "hook": [2, 3, 5], "while": [2, 3], "latter": [2, 3], "silent": [2, 3], "ignor": [2, 3], "them": [2, 3, 5], "object_detector_easg": 2, "edgecl": [2, 3], "effici": [2, 3, 4, 11, 12], "accur": 2, "design": 2, "capabl": [2, 3, 4, 7, 8, 11], "gt_ground": 2, "func": 2, "assign_rel": 2, "predict": [2, 3, 7, 11, 12, 13], "assign_iou_threshold": 2, "assign": 2, "between": [2, 3, 5, 6, 7, 13], "ground": [2, 6, 7, 13], "truth": [2, 6, 7, 13], "annot": [2, 6, 9, 11], "match": 2, "bound": [2, 3, 6, 7, 13], "iou": 2, "threshold": [2, 12], "prepar": [2, 5, 7, 9, 12], "data": [2, 4, 5, 7, 9, 11, 13], "dict": [2, 3], "result": [2, 4, 5, 11, 12, 13], "from": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13], "label": [2, 7, 12, 13], "score": [2, 7, 12, 13], "featur": [2, 3, 4, 6, 11, 13], "info": 2, "float": [2, 3, 13], "typic": 2, "0": [2, 3, 5, 7, 9, 10, 11, 12], "5": [2, 3, 7, 11, 12, 13], "tupl": [2, 3], "found": 2, "indic": [2, 3], "im_list_to_blob": 2, "im": 2, "convert": [2, 6], "imag": [2, 6], "network": [2, 3], "input": [2, 3, 4, 5, 6, 7, 11, 13], "assum": 2, "ar": [2, 5, 9, 10, 12, 13], "alreadi": [2, 5], "mean": [2, 3, 7], "subtract": 2, "bgr": 2, "order": 2, "enumerate_by_imag": 2, "im_ind": 2, "transpose_packed_sequence_ind": 2, "goe": 2, "txb": 2, "pack": 2, "bxt": 2, "vice": 2, "versa": 2, "noth": 2, "i": [2, 3, 4, 5, 6, 8, 9, 10], "param": [2, 3], "p": [2, 7, 11], "packedsequ": 2, "pad_sequ": 2, "frame_idx": 2, "word_vector": 2, "create_ssl_context": 2, "unverifi": 2, "ssl": 2, "context": [2, 3], "bypass": 2, "certif": 2, "verif": [2, 8], "disabl": 2, "hostnam": 2, "issu": [2, 4, 5, 10], "when": [2, 3, 5, 10, 13], "download": [2, 5, 6, 9, 11], "extern": [2, 11], "sslcontext": 2, "download_word_vector": 2, "wv_type": 2, "wv_dir": 2, "wv_dim": 2, "thei": 2, "exist": [2, 4, 5, 6, 11], "pre": [2, 5], "resourc": [2, 11], "extract": [2, 3, 4, 6], "dimens": [2, 3], "file": [2, 3, 4, 5, 6, 9, 10, 11, 12, 13], "e": [2, 3, 5, 7, 9], "g": [2, 3, 5, 7], "glove": 2, "6b": 2, "directori": [2, 6, 9, 12, 13], "save": [2, 4, 11, 12, 13], "int": [2, 3, 5, 13], "get_cache_path": 2, "get": [2, 3, 8], "cach": [2, 4, 6, 7, 12], "construct": [2, 5], "pickl": 2, "get_cache_statu": 2, "statu": 2, "inform": [2, 3, 6, 7, 11, 12], "about": [2, 5, 6, 10, 11, 12], "memori": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13], "disk": 2, "dictionari": [2, 3], "clear_word_vector_cach": 2, "clear": [2, 5, 7, 12], "can": [2, 6, 11, 13], "target": [2, 11], "load_word_vector": 2, "200": [2, 6], "present": 2, "support": [2, 3, 4, 8, 9, 12, 13], "check": [2, 5, 6, 7, 8, 11, 12, 13], "first": [2, 5, 9, 11, 12], "final": [2, 12], "map": [2, 7], "represent": [2, 3, 11], "obj_edge_vector": 2, "embed": [2, 3], "zero": [2, 11], "unknown": 2, "torch": [2, 3, 5, 6, 7, 9, 11, 12], "verb_edge_vector": 2, "300": 2, "verb": 2, "current": [2, 3], "same": [2, 7], "logic": [2, 7], "reporthook": 2, "http": [2, 3, 5, 6, 9, 10], "github": [2, 4, 5, 9, 10], "com": [2, 5, 9, 10], "tqdm": [2, 9], "evaluation_recal": 2, "basicscenegraphevalu": 2, "ag_object_class": 2, "ag_all_pred": 2, "ag_attention_pred": 2, "ag_spatial_pred": 2, "ag_contacting_pred": 2, "iou_threshold": 2, "constraint": 2, "semithreshold": 2, "logger": 2, "recal": [2, 4, 5, 11, 12], "metric": [2, 4, 5, 6, 8, 11, 12, 13], "across": [2, 3, 7, 11], "predic": [2, 6, 12], "attent": [2, 3, 11], "spatial": [2, 3, 4, 8, 10, 11], "contact": [2, 3], "semi": 2, "log": [2, 4, 13], "reset_result": 2, "calc_mrecal": 2, "evaluate_scene_graph": 2, "gt": [2, 9], "pred": 2, "return_per_sampl": 2, "collect": 2, "groundtruth": 2, "evaluate_from_dict": 2, "gt_entri": 2, "pred_entri": 2, "result_dict": 2, "9": [2, 7, 9, 11], "kwarg": 2, "shortcut": 2, "do": [2, 7, 10, 12], "evaluate_recal": 2, "gt_relat": 2, "gt_class": 2, "pred_rel": 2, "pred_box": 2, "pred_class": 2, "gt_rel": 2, "rel_scor": 2, "cls_score": 2, "iou_thresh": 2, "phrdet": 2, "numpi": [2, 7, 9, 10], "ndarrai": 2, "arrai": 2, "shape": [2, 3, 5], "3": [2, 3, 5, 7, 10, 11, 12], "4": [2, 3, 6, 7, 11, 12, 13], "id0": 2, "id1": 2, "rel": [2, 3, 7], "classif": [2, 3, 7, 11, 12], "phrase": 2, "box_util": 2, "bbox_loss": 2, "prior_box": 2, "delta": 2, "ep": 2, "0001": 2, "scale_befor": 2, "1": [2, 3, 5, 6, 7, 11, 12, 13], "regress": [2, 5], "loss": [2, 3, 11, 12, 13], "smooth": 2, "l1": 2, "prior": [2, 3], "x1": 2, "y1": 2, "x2": 2, "y2": 2, "tx": 2, "ty": 2, "th": 2, "tw": 2, "small": [2, 12, 13], "epsilon": 2, "valu": [2, 5, 7, 12], "numer": 2, "stabil": 2, "1e": [2, 11, 12, 13], "scale": [2, 7, 11], "factor": 2, "bbox_pr": 2, "coordin": 2, "along": 2, "format": [2, 4, 5, 6, 7, 9, 13], "offset": 2, "center_s": 2, "cx": 2, "cy": 2, "w": [2, 3], "h": [2, 3], "comparison": [2, 4, 8], "center": 2, "form": 2, "point_form": 2, "xmin": 2, "ymin": 2, "xmax": 2, "ymax": 2, "point": [2, 12], "priorbox": 2, "layer": [2, 3], "bbox_intersect": 2, "box_a": 2, "box_b": 2, "we": [2, 5], "resiz": 2, "A": [2, 5, 10], "b": [2, 3], "2": [2, 3, 5, 6, 7, 10, 11, 12, 13], "new": [2, 3, 4, 7, 8, 11], "malloc": 2, "\u013aeftright": 2, "Then": 2, "area": 2, "intersect": 2, "bbox_overlap": 2, "jaccard": 2, "overlap": 2, "two": [2, 7], "calcul": [2, 7], "over": 2, "union": 2, "pair": 2, "num_object": 2, "second": [2, 5], "num_prior": 2, "matrix": [2, 3], "nms_overlap": 2, "each": [2, 3, 6, 7, 11], "channel": 2, "document": [3, 4, 6, 7, 10, 11], "objectclassifi": 3, "obj_class": 3, "object": [3, 4, 6, 7, 10, 11, 12, 13], "edg": 3, "contextu": 3, "tempor": [3, 4, 6, 8, 10, 11], "classifi": 3, "clean_class": 3, "entri": 3, "class_idx": 3, "attention_class_num": 3, "spatial_class_num": 3, "contact_class_num": 3, "rel_class": 3, "enc_layer_num": 3, "dec_layer_num": 3, "window_s": 3, "trainprior": 3, "use_spatial_prior": 3, "use_temporal_prior": 3, "relationship": [3, 6, 7, 11, 12, 13], "were": 3, "n_layer_num": 3, "pred_contact_threshold": 3, "let": 3, "": 3, "yo": 3, "sttran_easg": 3, "actionclassifi": 3, "verb_class": 3, "intern": [3, 10], "state": [3, 7, 11, 13], "share": [3, 9], "scriptmodul": 3, "edge_class_num": 3, "use_visual_featur": 3, "main": [3, 5, 13], "import": [3, 5, 6, 7, 9, 11, 12], "distribut": [3, 4, 7, 10, 12], "access": [3, 6], "through": [3, 6, 12, 13], "unifi": 3, "interfac": [3, 4, 5, 8], "ha": 3, "been": 3, "multipl": [3, 6, 8, 12, 13], "better": [3, 12], "organ": [3, 4, 5, 9, 13], "vqvae": 3, "py": [3, 5, 6, 7, 11, 12], "vq": 3, "vae": 3, "quantiz": [3, 11], "sia": 3, "aggreg": 3, "hierarch": [3, 11], "ot": 3, "optim": [3, 4, 7, 8, 9], "transport": 3, "codebook": 3, "updat": [3, 4, 5, 6, 11], "llm": 3, "lora": 3, "decod": [3, 11], "todo": [3, 6, 9], "compar": [3, 5, 7, 11, 13], "cluster": 3, "improv": [3, 4, 5, 11], "prompt": 3, "templat": [3, 5, 7], "add": [3, 5, 6, 9, 11, 12], "gcn": 3, "cross": [3, 4, 5, 11], "entropi": 3, "mse": 3, "cfg": 3, "languag": [3, 4, 5, 8, 11, 12, 13], "integr": [3, 4, 5, 6, 8, 11, 12, 13], "combin": [3, 7, 11], "adapt": 3, "advanc": [3, 6, 8], "descript": [3, 5, 7, 11, 12], "configur": [3, 4, 6, 8, 9, 11, 12], "setup": [3, 6, 8], "set_training_stag": 3, "stage": 3, "freez": 3, "unfreez": 3, "accordingli": 3, "update_codebook_with_ot": 3, "scheme": 3, "vqvaequant": 3, "input_dim": 3, "2048": 3, "dim": 3, "1024": [3, 11, 12], "codebook_s": 3, "8192": 3, "commitment_cost": 3, "25": [3, 6, 7, 11, 12], "vector": 3, "variat": 3, "autoencod": 3, "discret": 3, "latent": 3, "space": [3, 9], "learn": [3, 5, 6, 9, 13], "commit": 3, "stabl": 3, "weight": [3, 12], "roi_feat": 3, "roi": 3, "n": 3, "reconstruct": 3, "get_usage_histogram": 3, "usag": [3, 4, 5, 6, 7, 8, 9, 11, 12], "histogram": [3, 12], "reset_usage_count": 3, "reset": 3, "counter": 3, "update_codebook": 3, "new_codebook_weight": 3, "emb": 3, "x": 3, "y": 3, "fuse": 3, "token": 3, "reason": [3, 11], "feat": [3, 5], "otcodebookupdat": 3, "base_codebook": 3, "step": [3, 5, 8], "512": [3, 5, 11, 12, 13], "max_iter": 3, "10": [3, 5, 6, 7, 9, 11, 12], "usage_hist": 3, "frequenc": [3, 12], "updated_codebook": 3, "scenellmlora": 3, "model_nam": 3, "fallback_dim": 3, "16": [3, 11], "alpha": 3, "32": [3, 12], "dropout": [3, 11], "05": 3, "low": [3, 7, 13], "rank": 3, "fine": [3, 6, 11, 12, 13], "tune": [3, 8, 13], "fallback": 3, "unavail": 3, "googl": [3, 9], "gemma": 3, "2b": 3, "rate": [3, 11, 12, 13], "token_emb": 3, "sggdecod": 3, "hidden_dim": [3, 5, 11, 12, 13], "attn_c": 3, "spat_c": 3, "cont_c": 3, "hidden": 3, "encod": [3, 11], "linear": [3, 11], "head": [3, 11], "number": [3, 5, 12, 13], "seq": 3, "d": [3, 9], "build_hierarchical_graph": 3, "build": [3, 10], "structur": [3, 4, 6, 8, 9, 11], "algorithm": [3, 12], "normal": 3, "dgl": 3, "simpl": [3, 4, 9], "dglgraph": 3, "credit": [3, 5], "author": [3, 10], "origin": [3, 6, 9, 10], "code": [3, 7, 10], "doi": 3, "org": [3, 6, 9, 10], "1016": 3, "j": 3, "patcog": 3, "2025": [3, 10], "111992": 3, "positionalencod": 3, "d_model": 3, "max_len": 3, "5000": 3, "posit": [3, 7], "sinusoid": 3, "probabl": 3, "maximum": 3, "appli": 3, "batch_siz": [3, 6, 7, 11, 12, 13], "seq_len": 3, "embedding_dim": 3, "ad": [3, 5], "obj_head": 3, "gmm": 3, "k": [3, 4, 7], "mem_comput": 3, "selection_lambda": 3, "track": [3, 11, 12], "approach": [3, 8], "augment": [3, 4, 5], "uncertainti": [3, 4, 11, 13], "estim": [3, 7, 11], "mem_select": 3, "memory_hallucin": 3, "obj_featur": 3, "phase": 3, "unc": 3, "obj_mem_comput": 3, "rel_mem_comput": 3, "mem_fus": 3, "take_obj_mem_feat": 3, "rel_head": 3, "transformer_tempura": 3, "transformerencoderlay": 3, "embed_dim": 3, "1936": 3, "nhead": 3, "dim_feedforward": 3, "src": 3, "input_key_padding_mask": 3, "transformerdecoderlay": 3, "global_input": 3, "position_emb": 3, "transformerencod": 3, "encoder_lay": 3, "num_lay": 3, "transformerdecod": 3, "decoder_lay": 3, "8": [3, 5, 6, 7, 9, 11, 12], "local_attent": 3, "global_attent": 3, "position_embed": 3, "window": [3, 5, 7, 9], "im_idx": 3, "gmm_head": 3, "hid_dim": 3, "num_class": 3, "rel_typ": 3, "gaussian": [3, 7, 11], "mixtur": [3, 11], "learnabl": 3, "varianc": 3, "output": [3, 5, 6, 7, 8, 12], "affect": 3, "activ": [3, 5, 6, 9, 12], "conf_mu_k": 3, "conf_var_k": 3, "conf_pi_k_": 3, "epistem": 3, "aleator": 3, "conf_pi_k": 3, "spatio": [3, 10], "knowledg": [3, 4, 11, 13], "enhanc": [3, 4, 6, 11, 13], "transformer_stket": 3, "addit": [3, 6, 9], "feed": 3, "pad": 3, "mask": 3, "spatial_encod": 3, "obj_class_num": 3, "37": 3, "6": [3, 7, 9, 11, 12], "17": [3, 7], "temporal_decod": 3, "contact_distribut": 3, "ensemble_decod": 3, "spatial_featur": 3, "temporal_featur": 3, "multi": [3, 4, 11], "singl": [3, 12], "self": [3, 5, 6, 11], "mechan": [3, 4, 11], "wise": 3, "notabl": 4, "keep": 4, "adher": 4, "semant": [4, 5, 6], "version": [4, 9], "comprehens": [4, 5, 7, 8, 12, 13], "sphinx": 4, "page": [4, 5, 8, 9, 10], "deploy": [4, 8], "workflow": 4, "api": [4, 5, 6, 7, 11], "evalu": [4, 5, 6, 8, 11, 12], "guid": [4, 5, 6, 9, 11], "instal": [4, 5, 8], "instruct": [4, 5, 6, 9], "depend": 4, "baselin": [4, 5, 7, 11, 12, 13], "quantif": [4, 11], "dsg": [4, 8, 11], "detr": [4, 8, 11], "dynam": [4, 8, 10, 11], "o": [4, 5, 8, 11], "entiti": [4, 11], "disentangl": [4, 11], "compat": [4, 5, 9], "pipelin": [4, 7, 11, 13], "infrastructur": 4, "mix": [4, 11, 13], "precis": [4, 7, 11, 13], "monitor": [4, 6, 8], "automat": [4, 13], "checkpoint": [4, 8, 11, 13], "framework": [4, 6, 8, 13], "standard": [4, 12], "mrecal": [4, 7, 11], "calibr": [4, 7], "robust": [4, 11], "analysi": [4, 8, 11, 13], "tool": [4, 8], "gui": [4, 8], "applic": [4, 8, 9, 10, 11], "interact": [4, 5, 6, 8, 13], "real": [4, 11, 13], "time": [4, 5, 7, 11, 12, 13], "export": [4, 13], "detect": [4, 7, 10, 12], "profil": [4, 7, 12], "extens": 4, "suit": [4, 5, 9], "larg": [4, 6, 7, 9, 11, 12, 13], "platform": 4, "gpu": [4, 7, 9, 11, 12, 13], "valid": [4, 7, 12, 13], "loader": [4, 6], "safe": 4, "temporari": 4, "basic": [4, 6, 8, 9], "script": [4, 5, 6, 9, 12], "legend": 4, "deprec": 4, "soon": 4, "now": 4, "ani": [4, 10], "bug": 4, "welcom": [5, 8], "explain": 5, "how": [5, 6], "fork": [5, 6], "repositori": [5, 10], "clone": 5, "your": [5, 10], "local": 5, "git": [5, 9], "usernam": [5, 10], "dlhm_vidsgg": [5, 9, 10], "cd": [5, 9], "environ": 5, "python": [5, 6, 7, 10, 11, 12, 13], "m": [5, 7, 9, 12, 13], "venv": [5, 9], "bin": [5, 9], "On": [5, 9], "pip": [5, 9], "dev": 5, "follow": [5, 9, 10, 13], "pep": 5, "some": 5, "convent": 5, "doubl": 5, "quot": 5, "string": 5, "limit": [5, 10, 11], "100": [5, 6, 7, 12, 13], "charact": 5, "hint": 5, "docstr": 5, "public": 5, "def": [5, 6, 7, 11, 12], "example_funct": 5, "param1": 5, "param2": 5, "exampl": [5, 7, 8, 9, 12, 13], "arg": 5, "pleas": [5, 10], "oper": [5, 9], "system": [5, 11], "full": [5, 10, 12, 13], "error": [5, 9, 13], "traceback": 5, "minim": 5, "reproduc": 5, "expect": 5, "v": [5, 7], "actual": 5, "behavior": 5, "occur": 5, "what": 5, "happen": 5, "ubuntu": 5, "20": [5, 7, 11, 12], "04": 5, "12": [5, 7, 11, 12], "For": [5, 7, 9, 10, 11, 13], "describ": 5, "motiv": 5, "case": 5, "consid": [5, 7], "complex": [5, 11], "To": [5, 6, 8, 11, 13], "against": [5, 7], "base_model": [5, 11], "basemodel": [5, 11], "newmodel": 5, "super": [5, 6, 11], "basedataset": [5, 6], "newdataset": 5, "__getitem__": [5, 6], "idx": [5, 6], "bugfix": 5, "fix": 5, "doc": 5, "refactor": 5, "compon": [5, 8, 10, 11], "scope": 5, "bodi": 5, "footer": 5, "resolv": 5, "unit": 5, "make": 5, "chang": [5, 7], "submit": 5, "brief": 5, "manual": 5, "complet": [5, 6], "pytest": [5, 9], "test_model": 5, "coverag": 5, "cov": 5, "new_model": 5, "testnewmodel": 5, "test_model_initi": 5, "correctli": [5, 7, 9], "assert": 5, "test_forward_pass": 5, "randn": 5, "individu": 5, "end": [5, 7, 12, 13], "speed": [5, 11], "index": [5, 8], "rst": 5, "_static": 5, "static": [5, 6], "asset": 5, "concis": 5, "refer": 5, "autofunct": 5, "block": 5, "42": [5, 7, 12], "print": [5, 6, 7, 9, 12], "html": [5, 7, 9], "view": [5, 9], "browser": 5, "open": [5, 10], "_build": 5, "correct": 5, "verifi": [5, 7, 9, 11, 12, 13], "feedback": 5, "work": [5, 10], "intend": [5, 10], "cover": [5, 7, 13], "No": [5, 9], "secur": 5, "consider": [5, 8], "address": 5, "receiv": 5, "comment": 5, "promptli": 5, "ask": 5, "clarif": 5, "unclear": 5, "thank": 5, "Be": 5, "respect": 5, "inclus": 5, "newcom": 5, "focu": 5, "discuss": 5, "question": [5, 10], "If": [5, 10], "you": [5, 9, 10], "problem": 5, "relev": [5, 10], "patient": 5, "semver": 5, "major": [5, 10], "minor": 5, "patch": 5, "break": 5, "backward": 5, "befor": 5, "changelog": [5, 8], "note": 5, "contributor": [5, 10], "recogn": 5, "readm": 5, "md": 5, "acknowledg": 5, "histori": 5, "primari": [6, 7], "overview": 6, "domain": [6, 11], "human": 6, "000": 6, "dens": 6, "mp4": 6, "json": [6, 7], "val": 6, "video_001": 6, "video_002": 6, "video_id": 6, "frame_annot": 6, "frame_id": 6, "object_id": 6, "bbox": 6, "50": [6, 7, 11, 12], "150": 6, "attribut": 6, "adult": 6, "stand": 6, "subject_id": 6, "hold": [6, 7], "visit": [6, 9], "www": [6, 9, 10], "actiongenom": [6, 9, 10], "toolkit": [6, 9], "place": [6, 9], "extend": [6, 8], "grain": 6, "features_verb": 6, "pt": [6, 11], "verb_featur": 6, "model_fin": 6, "pth": [6, 7, 9, 11, 12, 13], "pretrain": [6, 9, 11], "actiongenomedataset": 6, "load_annot": 6, "processed_data": 6, "preprocess_annot": 6, "extract_featur": 6, "video_path": 6, "shuffl": 6, "num_work": [6, 7, 13], "iter": 6, "metadata": 6, "filter_duplicate_rel": 6, "filter_multiple_pr": 6, "frame_sample_r": 6, "7": [6, 7, 9, 11], "842": 6, "476": 6, "583": 6, "752": 6, "524": 6, "960": 6, "119": 6, "145": 6, "438": 6, "131": 6, "170": 6, "384": 6, "35": 6, "categori": 6, "chair": 6, "tabl": [6, 12], "cup": 6, "plate": 6, "food": 6, "bag": 6, "bed": 6, "book": 6, "laptop": 6, "phone": 6, "tv": 6, "remot": 6, "mous": 6, "keyboard": 6, "bottl": 6, "wine_glass": 6, "knife": 6, "spoon": 6, "bowl": 6, "banana": 6, "appl": 6, "sandwich": 6, "orang": 6, "broccoli": 6, "carrot": 6, "hot_dog": 6, "pizza": 6, "donut": 6, "cake": 6, "refriger": 6, "oven": 6, "microwav": 6, "toaster": 6, "looking_at": [6, 7], "not_looking_at": 6, "unsur": 6, "abov": [6, 10], "beneath": 6, "in_front_of": 6, "behind": 6, "on_the_side_of": 6, "carri": 6, "covered_bi": 6, "drinking_from": 6, "eat": 6, "have_it_on_the_back": 6, "leaning_on": 6, "lying_on": 6, "not_contact": 6, "other_relationship": 6, "sitting_on": [6, 7], "standing_on": 6, "touch": 6, "twist": 6, "wear": 6, "wipe": 6, "validate_dataset": 6, "validation_report": 6, "common": 6, "align": 6, "miss": [6, 7, 9], "corrupt": 6, "enabl": [6, 11, 12, 13], "parallel": 6, "worker": [6, 12, 13], "pin_memori": 6, "persistent_work": 6, "raw": [6, 7, 13], "500gb": 6, "200gb": 6, "100gb": 6, "50gb": [6, 9], "15gb": 6, "10gb": [6, 11], "inherit": 6, "__len__": 6, "customdataset": 6, "sampl": [6, 7, 9, 11, 12, 13], "convert_dataset": 6, "custom_data": 6, "action_genome_format": 6, "understand": [6, 7, 9, 11, 12, 13], "procedur": [6, 8, 11, 13], "given": [7, 12], "model_path": [7, 13], "sttran_predcl": [7, 12], "checkpoint_best": [7, 12], "tar": [7, 12, 13], "save_result": 7, "evaluation_result": 7, "percentag": 7, "appear": 7, "top": 7, "averag": 7, "unseen": 7, "novel": 7, "triplet": 7, "composit": [7, 10], "seen": 7, "element": 7, "per_category_result": 7, "18": [7, 11], "31": 7, "22": [7, 11], "15": [7, 9, 11, 12], "_predcl": 7, "_predcls_result": 7, "done": [7, 12], "action_genome_model": 7, "cross_dataset_result": 7, "analyz": 7, "temporal_window": [7, 11, 12], "accuraci": [7, 11, 13], "sttran_sgcl": 7, "joint": 7, "sttran_sgdet": 7, "evaluate_uncertainti": 7, "tempura_model": 7, "calibration_method": 7, "temperature_sc": 7, "ec": 7, "reliabl": 7, "diagram": 7, "correl": 7, "perturb": 7, "nois": 7, "test_robust": 7, "noise_level": 7, "noise_typ": 7, "occlus": 7, "crop": 7, "jitter": 7, "light": 7, "measur": 7, "profile_model": 7, "num_iter": 7, "flop": 7, "count": 7, "scipi": [7, 9], "stat": 7, "model1_scor": 7, "19": [7, 11, 12], "model2_scor": 7, "t_stat": 7, "p_valu": 7, "ttest_rel": 7, "f": [7, 12], "failur": 7, "analyze_error": 7, "ground_truth": 7, "test_annot": 7, "save_analysi": 7, "error_analysi": 7, "frequent": 7, "inconsist": 7, "plot": 7, "visualize_result": 7, "results_dir": 7, "output_dir": 7, "curv": 7, "confus": 7, "matric": 7, "bar": 7, "establish": 7, "mr": 7, "year": [7, 10], "imp": 7, "2017": 7, "kern": 7, "2019": 7, "14": [7, 11], "26": [7, 11], "2021": [7, 10], "21": [7, 9, 11], "28": [7, 11], "2022": 7, "format_submiss": 7, "test_predict": 7, "custom_metr": 7, "compute_domain_specific_scor": 7, "temporal_consist": 7, "consistency_scor": 7, "rang": [7, 12], "len": 7, "similar": 7, "overal": 7, "scene_graph_qu": 7, "level": 7, "node_similar": 7, "compute_node_similar": 7, "edge_similar": 7, "compute_edge_similar": 7, "structure_similar": 7, "compute_structure_similar": 7, "random": 7, "seed": [7, 12], "manual_se": [7, 12], "np": [7, 12], "protocol": 7, "eval_config": 7, "determinist": [7, 12], "123": 7, "456": 7, "789": 7, "999": 7, "run_": 7, "confid": [7, 11], "interv": 7, "mean_scor": 7, "std_error": 7, "sem": 7, "ci": 7, "95": 7, "loc": 7, "1f": 7, "dure": [7, 12], "reduc": [7, 9, 11, 12, 13], "sequenti": 7, "slow": [7, 12], "bottleneck": 7, "unexpect": 7, "leakag": 7, "generate_report": 7, "evaluation_report": 7, "model_evalu": 7, "quantit": 7, "qualit": 7, "art": [7, 11], "insight": 7, "characterist": 7, "built": [8, 11], "upon": [8, 10], "t5": 8, "pegasu": 8, "summar": 8, "demo": [8, 9], "quickli": 8, "see": [8, 10], "out": [8, 9, 10, 13], "requir": [8, 12], "troubleshoot": 8, "next": 8, "tip": 8, "statist": 8, "qualiti": [8, 11], "assur": 8, "custom": [8, 13], "guidelin": 8, "strategi": 8, "techniqu": 8, "best": [8, 11, 13], "practic": [8, 13], "benchmark": [8, 12], "report": 8, "core": [8, 13], "contribut": 8, "licens": 8, "search": 8, "help": 9, "linux": 9, "maco": 9, "higher": 9, "cuda": [9, 12, 13], "At": 9, "least": 9, "16gb": [9, 11], "ram": 9, "32gb": 9, "storag": [9, 12], "free": [9, 10], "packag": [9, 10], "torchvis": 9, "panda": 9, "matplotlib": [9, 10], "opencv": [9, 10], "62": 9, "pillow": 9, "scikit": 9, "24": [9, 11], "easydict": 9, "13": 9, "pyyaml": 9, "pyqt5": 9, "url": [9, 10], "txt": [9, 12, 13], "Or": 9, "ai": 9, "start": [9, 11, 12], "choos": [9, 12], "cu117": 9, "11": 9, "compil": 9, "jwyang": [9, 10], "rcnn": [9, 10], "drive": 9, "u930pk0jyz3ivs6v_hntm1d5axmn5b": 9, "usp": 9, "faster_rcnn_ag": 9, "jingweij": 9, "filter": 9, "object_bbox_and_relationship_filtersmal": 9, "pkl": 9, "19bkawjcw5byygyzjfo174oc3ud56fkat": 9, "c": [9, 10], "__version__": 9, "successfulli": 9, "is_avail": 9, "execut": 9, "importerror": 9, "cpu": 9, "onli": 9, "placement": 9, "nvidia": [9, 12], "rtx": 9, "3090": 9, "equival": 9, "24gb": 9, "vram": 9, "gtx": 9, "1080": 9, "8gb": [9, 11], "minimum": 9, "possibl": [9, 13], "significantli": 9, "slower": 9, "after": 9, "success": 9, "proce": 9, "pattern": [9, 10, 12, 13], "releas": 10, "under": 10, "copyright": 10, "team": 10, "permiss": 10, "herebi": 10, "grant": 10, "charg": 10, "obtain": 10, "copi": 10, "softwar": 10, "associ": 10, "deal": 10, "restrict": 10, "right": 10, "modifi": 10, "merg": 10, "publish": 10, "sublicens": 10, "sell": 10, "permit": 10, "whom": 10, "furnish": 10, "so": 10, "subject": 10, "condit": 10, "notic": 10, "shall": 10, "substanti": 10, "portion": 10, "THE": 10, "AS": 10, "warranti": 10, "OF": 10, "kind": 10, "express": 10, "OR": 10, "impli": 10, "BUT": 10, "NOT": 10, "TO": 10, "merchant": 10, "fit": 10, "FOR": 10, "particular": 10, "purpos": 10, "AND": 10, "noninfring": 10, "IN": 10, "NO": 10, "event": 10, "holder": 10, "BE": 10, "liabl": 10, "claim": 10, "damag": 10, "liabil": 10, "contract": 10, "tort": 10, "otherwis": 10, "aris": 10, "connect": 10, "WITH": 10, "yrcong": 10, "paper": 10, "iccv": 10, "cite": 10, "websit": 10, "cvpr": 10, "2020": 10, "pyproject": 10, "toml": 10, "bsd": 10, "claus": 10, "apach": 10, "style": 10, "research": [10, 11], "misc": 10, "dlhm_vidsgg2025": 10, "titl": 10, "addition": 10, "inproceed": 10, "cong2021spati": 10, "cong": 10, "yuren": 10, "yang": 10, "wentong": 10, "li": 10, "hongwei": 10, "liao": 10, "jie": 10, "booktitl": 10, "proceed": 10, "ieee": 10, "cvf": 10, "confer": 10, "vision": [10, 11], "16372": 10, "16382": 10, "ji2020act": 10, "ji": 10, "jingwei": 10, "krishna": 10, "ranjai": 10, "fei": 10, "niebl": 10, "juan": 10, "carlo": 10, "recognit": [10, 11], "10236": 10, "10247": 10, "request": 10, "commerci": 10, "email": 10, "respons": 10, "educ": 10, "user": 10, "compli": 10, "law": 10, "regul": 10, "three": [11, 13], "serv": 11, "sttran_config": 11, "spatial_lay": [11, 12], "temporal_lay": [11, 12], "num_head": 11, "focus": [11, 13], "quantifi": 11, "awar": 11, "noisi": 11, "tempura_config": 11, "num_mixtur": [11, 12], "uncertainty_threshold": [11, 12], "gmm_regular": [11, 12], "01": [11, 12], "textual": 11, "multimod": 11, "fusion": 11, "produc": 11, "natur": 11, "shot": 11, "scenellm_config": 11, "llm_model": 11, "gemma3": 11, "270m": 11, "vision_backbon": 11, "resnet101": 11, "fusion_lay": 11, "text_gener": 11, "incorpor": 11, "30": 11, "27": 11, "hour": [11, 12], "fp": 11, "45m": 11, "52m": 11, "12gb": 11, "58m": 11, "balanc": 11, "recommend": 11, "highest": 11, "offlin": 11, "safeti": 11, "critic": 11, "control": 11, "expert": 11, "base_config": 11, "learning_r": [11, 13], "weight_decai": [11, 12], "gradient_clip": 11, "warmup_step": [11, 12], "1000": [11, 12], "schedul": [11, 12], "cosin": [11, 12], "sttran_tun": 11, "256": [11, 12], "tempura_tun": 11, "001": [11, 12], "progress": [11, 13], "simpler": 11, "curriculum": 11, "easier": [11, 12], "gradual": 11, "increas": [11, 12, 13], "difficulti": [11, 12], "converg": [11, 12], "custommodel": 11, "compute_loss": 11, "factori": 11, "wget": 11, "model_url": 11, "load_model": 11, "sttran_pretrain": 11, "fine_tun": 11, "new_dataset": 11, "epoch": [11, 12, 13], "onnx": 11, "sample_input": 11, "torchscript": 11, "traced_model": 11, "jit": 11, "trace": 11, "post": 11, "quantized_model": 11, "quantize_dynam": 11, "dtype": 11, "qint8": 11, "prune": 11, "global_unstructur": 11, "parameters_to_prun": 11, "pruning_method": 11, "l1unstructur": 11, "amount": 11, "instabl": [11, 12], "gradient": [11, 13], "clip": [11, 12], "poor": 11, "accumul": [11, 13], "lr": [12, 13], "save_path": 12, "l2": 12, "regular": 12, "clip_grad": 12, "warmup": 12, "plateau": 12, "save_freq": 12, "eval_freq": 12, "5e": 12, "2000": 12, "8e": 12, "With": 12, "llm_lr": 12, "freeze_llm_epoch": 12, "harder": 12, "easiest": 12, "resume_from": 12, "checkpoint_predcl": 12, "hardest": 12, "checkpoint_sgcl": 12, "80": 12, "ag_checkpoint": 12, "easi": 12, "get_easy_sampl": 12, "elif": 12, "60": 12, "medium": 12, "get_medium_sampl": 12, "els": 12, "get_full_dataset": 12, "train_epoch": 12, "sttran_predcls_20241201_143022": 12, "logfil": [12, 13], "content": 12, "45": 12, "120": 12, "118": 12, "eval": 12, "tensorboard": 12, "launch": [12, 13], "logdir": 12, "norm": 12, "prevent": 12, "overfit": 12, "early_stop": 12, "earlystop": 12, "patienc": 12, "min_delta": 12, "val_recal": 12, "use_amp": 12, "opt_level": 12, "o1": 12, "simul": 12, "larger": 12, "accumulate_grad_batch": 12, "effect": 12, "node": 12, "nproc_per_nod": 12, "systemat": 12, "explor": [12, 13], "more": 12, "uniform": 12, "choic": 12, "optuna": 12, "trial": 12, "suggest_loguniform": 12, "suggest_categor": 12, "suggest": 12, "train_model": 12, "studi": 12, "create_studi": 12, "n_trial": 12, "checkpoint_epoch_10": 12, "checkpoint_epoch_20": 12, "checkpoint_fin": 12, "model_state_dict": 12, "state_dict": 12, "optimizer_state_dict": 12, "checkpoint_epoch_": 12, "checkpoint_epoch_50": 12, "Not": [12, 13], "decreas": [12, 13], "try": [12, 13], "lower": 12, "nan": 12, "regularli": 12, "ssd": 12, "smi": 12, "l": 12, "profileract": 12, "record_shap": 12, "prof": 12, "train_step": 12, "key_averag": 12, "known": 12, "good": 12, "backend": 12, "cudnn": 12, "experi": 12, "date": 12, "2024": 12, "85": 12, "deep": [12, 13], "dive": [12, 13], "simplest": 13, "wai": 13, "variant": 13, "playback": 13, "switch": 13, "displai": 13, "pure": 13, "most": 13, "challeng": 13, "num_epoch": 13, "sttran_predcls_yyyymmdd_hhmmss": 13, "csv": 13, "tempura_sgdet_yyyymmdd_hhmmss": 13, "sttran_easgcls_yyyymmdd_hhmmss": 13, "store": 13, "encount": 13, "simultan": 13}, "objects": {"dataloader": [[1, 0, 0, "-", "action_genome"], [1, 0, 0, "-", "easg"]], "dataloader.action_genome": [[1, 1, 1, "", "AG"], [1, 4, 1, "", "cuda_collate_fn"]], "dataloader.action_genome.AG": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "valid_nums"]], "dataloader.easg": [[1, 1, 1, "", "EASG"], [1, 4, 1, "", "cuda_collate_fn"]], "dataloader.easg.EASG": [[1, 2, 1, "", "__init__"]], "lib": [[2, 0, 0, "-", "config"], [2, 0, 0, "-", "evaluation_recall"], [2, 0, 0, "-", "funcs"], [2, 0, 0, "-", "object_detector"], [2, 0, 0, "-", "object_detector_EASG"], [3, 0, 0, "-", "sttran"], [3, 0, 0, "-", "sttran_EASG"], [3, 0, 0, "-", "transformer"], [2, 0, 0, "-", "word_vectors"]], "lib.config": [[2, 1, 1, "", "Config"]], "lib.config.Config": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "setup_parser"]], "lib.evaluation_recall": [[2, 1, 1, "", "BasicSceneGraphEvaluator"], [2, 4, 1, "", "evaluate_from_dict"], [2, 4, 1, "", "evaluate_recall"]], "lib.evaluation_recall.BasicSceneGraphEvaluator": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "calc_mrecall"], [2, 2, 1, "", "evaluate_scene_graph"], [2, 2, 1, "", "print_stats"], [2, 2, 1, "", "reset_result"]], "lib.fpn": [[2, 0, 0, "-", "box_utils"]], "lib.fpn.box_utils": [[2, 4, 1, "", "bbox_intersections"], [2, 4, 1, "", "bbox_loss"], [2, 4, 1, "", "bbox_overlaps"], [2, 4, 1, "", "bbox_preds"], [2, 4, 1, "", "center_size"], [2, 4, 1, "", "nms_overlaps"], [2, 4, 1, "", "point_form"]], "lib.funcs": [[2, 4, 1, "", "assign_relations"], [2, 4, 1, "", "enumerate_by_image"], [2, 4, 1, "", "im_list_to_blob"], [2, 4, 1, "", "pad_sequence"], [2, 4, 1, "", "transpose_packed_sequence_inds"]], "lib.object_detector": [[2, 1, 1, "", "detector"]], "lib.object_detector.detector": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "forward"], [2, 3, 1, "", "training"]], "lib.object_detector_EASG": [[2, 1, 1, "", "detector"]], "lib.object_detector_EASG.detector": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "forward"], [2, 3, 1, "", "training"]], "lib.scenellm": [[3, 0, 0, "-", "llm"], [3, 0, 0, "-", "network"], [3, 0, 0, "-", "scenellm"], [3, 0, 0, "-", "vqvae"]], "lib.scenellm.llm": [[3, 1, 1, "", "SceneLLMLoRA"]], "lib.scenellm.llm.SceneLLMLoRA": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.scenellm.network": [[3, 1, 1, "", "SGGDecoder"], [3, 1, 1, "", "SceneLLM"]], "lib.scenellm.network.SGGDecoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.scenellm.network.SceneLLM": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "set_training_stage"], [3, 3, 1, "", "training"], [3, 2, 1, "", "update_codebook_with_ot"]], "lib.scenellm.scenellm": [[3, 1, 1, "", "OTCodebookUpdater"], [3, 1, 1, "", "SGGDecoder"], [3, 1, 1, "", "SIA"], [3, 1, 1, "", "SceneLLM"], [3, 1, 1, "", "SceneLLMLoRA"], [3, 1, 1, "", "VQVAEQuantizer"], [3, 4, 1, "", "build_hierarchical_graph"]], "lib.scenellm.scenellm.OTCodebookUpdater": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "update"]], "lib.scenellm.scenellm.SGGDecoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.scenellm.scenellm.SIA": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.scenellm.scenellm.SceneLLM": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "set_training_stage"], [3, 3, 1, "", "training"], [3, 2, 1, "", "update_codebook_with_ot"]], "lib.scenellm.scenellm.SceneLLMLoRA": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.scenellm.scenellm.VQVAEQuantizer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_usage_histogram"], [3, 2, 1, "", "reset_usage_count"], [3, 3, 1, "", "training"], [3, 2, 1, "", "update_codebook"]], "lib.scenellm.vqvae": [[3, 1, 1, "", "VQVAEQuantizer"]], "lib.scenellm.vqvae.VQVAEQuantizer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_usage_histogram"], [3, 2, 1, "", "reset_usage_count"], [3, 3, 1, "", "training"], [3, 2, 1, "", "update_codebook"]], "lib.stket": [[3, 0, 0, "-", "stket"], [3, 0, 0, "-", "transformer_stket"]], "lib.stket.stket": [[3, 1, 1, "", "ObjectClassifier"], [3, 1, 1, "", "STKET"]], "lib.stket.stket.ObjectClassifier": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "clean_class"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.stket.STKET": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.transformer_stket": [[3, 1, 1, "", "TransformerDecoder"], [3, 1, 1, "", "TransformerDecoderLayer"], [3, 1, 1, "", "TransformerEncoder"], [3, 1, 1, "", "TransformerEncoderLayer"], [3, 1, 1, "", "ensemble_decoder"], [3, 1, 1, "", "spatial_encoder"], [3, 1, 1, "", "temporal_decoder"]], "lib.stket.transformer_stket.TransformerDecoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.transformer_stket.TransformerDecoderLayer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.transformer_stket.TransformerEncoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.transformer_stket.TransformerEncoderLayer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.transformer_stket.ensemble_decoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.transformer_stket.spatial_encoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.stket.transformer_stket.temporal_decoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.sttran": [[3, 1, 1, "", "ObjectClassifier"], [3, 1, 1, "", "STKET"], [3, 1, 1, "", "STTran"]], "lib.sttran.ObjectClassifier": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "clean_class"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.sttran.STKET": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.sttran.STTran": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.sttran_EASG": [[3, 1, 1, "", "ActionClassifier"], [3, 1, 1, "", "ObjectClassifier"], [3, 1, 1, "", "STTran"]], "lib.sttran_EASG.ActionClassifier": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.sttran_EASG.ObjectClassifier": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.sttran_EASG.STTran": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.tempura": [[3, 0, 0, "-", "gmm_heads"], [3, 0, 0, "-", "tempura"], [3, 0, 0, "-", "transformer_tempura"]], "lib.tempura.gmm_heads": [[3, 1, 1, "", "GMM_head"]], "lib.tempura.gmm_heads.GMM_head": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"], [3, 2, 1, "", "uncertainty"]], "lib.tempura.tempura": [[3, 1, 1, "", "ObjectClassifier"], [3, 1, 1, "", "PositionalEncoding"], [3, 1, 1, "", "TEMPURA"]], "lib.tempura.tempura.ObjectClassifier": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "classify"], [3, 2, 1, "", "clean_class"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "mem_selection"], [3, 2, 1, "", "memory_hallucinator"], [3, 3, 1, "", "training"]], "lib.tempura.tempura.PositionalEncoding": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.tempura.tempura.TEMPURA": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.tempura.transformer_tempura": [[3, 1, 1, "", "TransformerDecoder"], [3, 1, 1, "", "TransformerDecoderLayer"], [3, 1, 1, "", "TransformerEncoder"], [3, 1, 1, "", "TransformerEncoderLayer"], [3, 1, 1, "", "transformer"]], "lib.tempura.transformer_tempura.TransformerDecoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.tempura.transformer_tempura.TransformerDecoderLayer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.tempura.transformer_tempura.TransformerEncoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.tempura.transformer_tempura.TransformerEncoderLayer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.tempura.transformer_tempura.transformer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "mem_selection"], [3, 2, 1, "", "memory_hallucinator"], [3, 3, 1, "", "training"]], "lib.transformer": [[3, 1, 1, "", "TransformerDecoder"], [3, 1, 1, "", "TransformerDecoderLayer"], [3, 1, 1, "", "TransformerEncoder"], [3, 1, 1, "", "TransformerEncoderLayer"], [3, 1, 1, "", "transformer"]], "lib.transformer.TransformerDecoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.transformer.TransformerDecoderLayer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.transformer.TransformerEncoder": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.transformer.TransformerEncoderLayer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.transformer.transformer": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "forward"], [3, 3, 1, "", "training"]], "lib.word_vectors": [[2, 4, 1, "", "clear_word_vector_cache"], [2, 4, 1, "", "create_ssl_context"], [2, 4, 1, "", "download_word_vectors"], [2, 4, 1, "", "get_cache_path"], [2, 4, 1, "", "get_cache_status"], [2, 4, 1, "", "load_word_vectors"], [2, 4, 1, "", "obj_edge_vectors"], [2, 4, 1, "", "reporthook"], [2, 4, 1, "", "verb_edge_vectors"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 8], "refer": [0, 8], "document": [0, 5, 8, 12], "core": [0, 2, 12], "compon": [0, 2, 3], "dataload": 1, "modul": [1, 2], "action": [1, 6, 7, 9, 10, 11], "genom": [1, 6, 7, 9, 10, 11], "easg": [1, 6, 9], "visual": [6, 7, 9, 12], "librari": [2, 9], "configur": [2, 13], "object": 2, "detect": [2, 13], "util": 2, "function": 2, "word": 2, "vector": 2, "evalu": [2, 7, 13], "nlp": 2, "fpn": 2, "model": [3, 5, 11, 12, 13], "sttran": [3, 10, 11, 12, 13], "scenellm": [3, 11, 12, 13], "tempura": [3, 11, 12, 13], "stket": [3, 11, 13], "transform": [3, 13], "changelog": 4, "unreleas": 4, "ad": [4, 6], "chang": 4, "0": 4, "1": [4, 9], "2024": 4, "12": 4, "01": 4, "fix": 4, "secur": 4, "contribut": 5, "get": 5, "start": [5, 8, 13], "develop": [5, 11], "setup": [5, 9], "code": 5, "style": 5, "type": 5, "bug": 5, "report": [5, 7], "featur": [5, 8], "request": 5, "new": [5, 6], "dataset": [5, 6, 7, 9, 10, 12, 13], "support": [5, 6], "workflow": [5, 12], "branch": 5, "name": 5, "commit": 5, "messag": 5, "pull": 5, "process": [5, 6], "test": [5, 9, 13], "run": [5, 7, 9], "write": 5, "categori": [5, 7], "structur": [5, 13], "build": 5, "review": 5, "guidelin": [5, 11], "respond": 5, "commun": 5, "conduct": 5, "channel": 5, "help": 5, "releas": 5, "version": 5, "checklist": 5, "recognit": 5, "data": [6, 12], "preprocess": 6, "load": 6, "statist": [6, 7], "qualiti": [6, 7], "assur": 6, "valid": 6, "perform": [6, 7, 11, 12, 13], "consider": [6, 11], "optim": [6, 11, 12, 13], "storag": 6, "requir": [6, 9, 11], "custom": [6, 7, 11], "convers": 6, "next": [6, 7, 9, 11, 12, 13], "step": [6, 7, 9, 11, 12, 13], "guid": [7, 8, 12, 13], "overview": [7, 8, 11, 12], "basic": [7, 12, 13], "simpl": [7, 12], "command": [7, 12, 13], "complet": [7, 12], "metric": 7, "recal": 7, "standard": 7, "zero": 7, "shot": 7, "per": 7, "analysi": 7, "procedur": 7, "cross": 7, "tempor": [7, 13], "mode": [7, 13], "specif": [7, 12], "predcl": [7, 11, 13], "sgcl": [7, 13], "sgdet": [7, 13], "advanc": [7, 12], "uncertainti": 7, "robust": 7, "effici": 7, "signific": 7, "error": 7, "benchmark": 7, "comparison": [7, 11], "result": 7, "leaderboard": 7, "submiss": 7, "domain": 7, "assess": 7, "best": [7, 12], "practic": [7, 12], "reproduc": [7, 12], "multipl": 7, "troubleshoot": [7, 9, 11, 12, 13], "common": [7, 9, 11, 12, 13], "issu": [7, 9, 11, 12, 13], "debug": 7, "autom": 7, "content": 7, "dlhm": 8, "vidsgg": 8, "kei": 8, "quick": [8, 13], "user": 8, "addit": 8, "inform": 8, "indic": 8, "tabl": 8, "instal": 9, "system": 9, "python": 9, "depend": [9, 10], "gui": [9, 13], "option": 9, "clone": 9, "repositori": 9, "2": 9, "creat": 9, "virtual": 9, "environ": 9, "recommend": 9, "3": 9, "4": 9, "dgl": 9, "deep": 9, "graph": [9, 13], "5": 9, "fasterrcnn": [9, 10], "backbon": 9, "verif": 9, "your": 9, "hardwar": 9, "licens": 10, "mit": 10, "third": 10, "parti": 10, "attribut": 10, "citat": 10, "contact": 10, "disclaim": 10, "comput": 11, "select": [11, 13], "choos": 11, "base": 11, "train": [11, 12, 13], "hyperparamet": [11, 12], "tune": [11, 12], "strategi": [11, 12], "transfer": 11, "learn": [11, 12], "deploy": 11, "export": 11, "paramet": 12, "essenti": 12, "progress": 12, "multi": 12, "curriculum": 12, "monitor": 12, "log": 12, "earli": 12, "stop": 12, "techniqu": 12, "mix": 12, "precis": 12, "gradient": 12, "accumul": 12, "parallel": 12, "grid": 12, "search": 12, "random": 12, "bayesian": 12, "checkpoint": 12, "automat": 12, "manual": 12, "resum": 12, "usag": 13, "line": 13, "interfac": 13, "script": 13, "py": 13, "demo": 13, "applic": 13, "scene": 13, "gener": 13, "predic": 13, "classif": 13, "avail": 13, "spatial": 13, "output": 13, "tip": 13}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "API Documentation:": [[0, null]], "Core Components": [[0, "core-components"], [2, "core-components"]], "Changelog": [[4, "changelog"]], "[Unreleased]": [[4, "unreleased"]], "Added": [[4, "added"], [4, "id2"], [4, "id4"]], "Changed": [[4, "changed"]], "[0.1.0] - 2024-12-01": [[4, "id1"]], "Fixed": [[4, "fixed"]], "Security": [[4, "security"]], "[0.0.1] - 2024-01-01": [[4, "id3"]], "Contributing": [[5, "contributing"]], "Getting Started": [[5, "getting-started"]], "Development Setup": [[5, "development-setup"]], "Code Style": [[5, "code-style"]], "Types of Contributions": [[5, "types-of-contributions"]], "Bug Reports": [[5, "bug-reports"]], "Feature Requests": [[5, "feature-requests"]], "New Models": [[5, "new-models"]], "Dataset Support": [[5, "dataset-support"]], "Development Workflow": [[5, "development-workflow"]], "Branch Naming": [[5, "branch-naming"]], "Commit Messages": [[5, "commit-messages"]], "Pull Request Process": [[5, "pull-request-process"]], "Testing": [[5, "testing"]], "Running Tests": [[5, "running-tests"]], "Writing Tests": [[5, "writing-tests"]], "Test Categories": [[5, "test-categories"]], "Documentation": [[5, "documentation"], [12, "documentation"]], "Documentation Structure": [[5, "documentation-structure"]], "Writing Documentation": [[5, "writing-documentation"]], "Building Documentation": [[5, "building-documentation"]], "Code Review Guidelines": [[5, "code-review-guidelines"]], "Reviewing Code": [[5, "reviewing-code"]], "Responding to Reviews": [[5, "responding-to-reviews"]], "Community Guidelines": [[5, "community-guidelines"]], "Code of Conduct": [[5, "code-of-conduct"]], "Communication Channels": [[5, "communication-channels"]], "Getting Help": [[5, "getting-help"]], "Release Process": [[5, "release-process"]], "Versioning": [[5, "versioning"]], "Release Checklist": [[5, "release-checklist"]], "Recognition": [[5, "recognition"]], "Datasets": [[6, "datasets"]], "Supported Datasets": [[6, "supported-datasets"]], "Action Genome": [[6, "action-genome"]], "EASG Dataset": [[6, "easg-dataset"], [9, "easg-dataset"]], "Visual Genome Dataset": [[6, "visual-genome-dataset"], [9, "visual-genome-dataset"]], "Dataset Processing": [[6, "dataset-processing"]], "Data Preprocessing": [[6, "data-preprocessing"]], "Data Loading": [[6, "data-loading"]], "Dataset Statistics": [[6, "dataset-statistics"]], "Action Genome Statistics": [[6, "action-genome-statistics"]], "Action Genome Dataset Statistics": [[6, "id1"]], "Quality Assurance": [[6, "quality-assurance"]], "Data Validation": [[6, "data-validation"]], "Performance Considerations": [[6, "performance-considerations"]], "Loading Optimization": [[6, "loading-optimization"]], "Storage Requirements": [[6, "storage-requirements"], [6, "id2"]], "Custom Datasets": [[6, "custom-datasets"]], "Adding New Datasets": [[6, "adding-new-datasets"]], "Dataset Conversion": [[6, "dataset-conversion"]], "Next Steps": [[6, "next-steps"], [7, "next-steps"], [9, "next-steps"], [11, "next-steps"], [12, "next-steps"], [13, "next-steps"]], "Evaluation Guide": [[7, "evaluation-guide"]], "Evaluation Overview": [[7, "evaluation-overview"]], "Basic Evaluation": [[7, "basic-evaluation"]], "Simple Evaluation Command": [[7, "simple-evaluation-command"]], "Complete Evaluation Command": [[7, "complete-evaluation-command"]], "Evaluation Metrics": [[7, "evaluation-metrics"]], "Recall Metrics": [[7, "recall-metrics"]], "Standard Evaluation Metrics": [[7, "id1"]], "Zero-Shot Metrics": [[7, "zero-shot-metrics"]], "Per-Category Analysis": [[7, "per-category-analysis"]], "Evaluation Procedures": [[7, "evaluation-procedures"]], "Standard Evaluation": [[7, "standard-evaluation"]], "Cross-Dataset Evaluation": [[7, "cross-dataset-evaluation"]], "Temporal Evaluation": [[7, "temporal-evaluation"]], "Mode-Specific Evaluation": [[7, "mode-specific-evaluation"]], "PredCLS Evaluation": [[7, "predcls-evaluation"]], "SGCLS Evaluation": [[7, "sgcls-evaluation"]], "SGDET Evaluation": [[7, "sgdet-evaluation"]], "Advanced Evaluation": [[7, "advanced-evaluation"]], "Uncertainty Evaluation": [[7, "uncertainty-evaluation"]], "Robustness Evaluation": [[7, "robustness-evaluation"]], "Efficiency Evaluation": [[7, "efficiency-evaluation"]], "Evaluation Analysis": [[7, "evaluation-analysis"]], "Statistical Significance": [[7, "statistical-significance"]], "Error Analysis": [[7, "error-analysis"]], "Visualization": [[7, "visualization"], [12, "visualization"]], "Benchmark Comparison": [[7, "benchmark-comparison"]], "Standard Benchmarks": [[7, "standard-benchmarks"]], "Action Genome Benchmark Results": [[7, "id2"]], "Leaderboard Submission": [[7, "leaderboard-submission"]], "Custom Evaluation": [[7, "custom-evaluation"]], "Domain-Specific Metrics": [[7, "domain-specific-metrics"]], "Temporal Metrics": [[7, "temporal-metrics"]], "Quality Assessment": [[7, "quality-assessment"]], "Evaluation Best Practices": [[7, "evaluation-best-practices"]], "Reproducibility": [[7, "reproducibility"], [12, "reproducibility"]], "Multiple Runs": [[7, "multiple-runs"]], "Statistical Reporting": [[7, "statistical-reporting"]], "Troubleshooting": [[7, "troubleshooting"], [9, "troubleshooting"], [11, "troubleshooting"], [12, "troubleshooting"], [13, "troubleshooting"]], "Common Issues": [[7, "common-issues"], [9, "common-issues"], [11, "common-issues"], [13, "common-issues"]], "Performance Debugging": [[7, "performance-debugging"]], "Evaluation Reports": [[7, "evaluation-reports"]], "Automated Reports": [[7, "automated-reports"]], "Report Contents": [[7, "report-contents"]], "DLHM VidSGG Documentation": [[8, "dlhm-vidsgg-documentation"]], "Overview": [[8, "overview"]], "Key Features": [[8, "key-features"]], "Quick Start": [[8, "quick-start"], [13, "quick-start"]], "User Guide:": [[8, null]], "API Reference:": [[8, null]], "Additional Information:": [[8, null]], "Indices and Tables": [[8, "indices-and-tables"]], "Installation": [[9, "installation"]], "Requirements": [[9, "requirements"]], "System Requirements": [[9, "system-requirements"]], "Python Dependencies": [[9, "python-dependencies"]], "GUI Dependencies (Optional)": [[9, "gui-dependencies-optional"]], "Installation Steps": [[9, "installation-steps"]], "1. Clone the Repository": [[9, "clone-the-repository"]], "2. Create Virtual Environment (Recommended)": [[9, "create-virtual-environment-recommended"]], "3. Install Dependencies": [[9, "install-dependencies"]], "4. Install DGL (Deep Graph Library)": [[9, "install-dgl-deep-graph-library"]], "5. Setup FasterRCNN Backbone": [[9, "setup-fasterrcnn-backbone"]], "Dataset Setup": [[9, "dataset-setup"]], "Action Genome Dataset": [[9, "action-genome-dataset"], [10, "action-genome-dataset"]], "Verification": [[9, "verification"]], "Test Your Installation": [[9, "test-your-installation"]], "Run Tests": [[9, "run-tests"]], "Hardware Requirements": [[9, "hardware-requirements"]], "License": [[10, "license"]], "MIT License": [[10, "mit-license"]], "Third-Party Licenses": [[10, "third-party-licenses"]], "STTran": [[10, "sttran"]], "FasterRCNN": [[10, "fasterrcnn"]], "Dependencies": [[10, "dependencies"]], "Attribution": [[10, "attribution"]], "STTran Citation": [[10, "sttran-citation"]], "Action Genome Citation": [[10, "action-genome-citation"]], "Contact": [[10, "contact"]], "Disclaimer": [[10, "disclaimer"]], "Models": [[11, "models"], [3, "models"]], "STTran Model": [[11, "sttran-model"], [3, "module-lib.sttran"]], "SceneLLM Model": [[11, "scenellm-model"], [3, "module-lib.scenellm.scenellm"]], "Tempura Model": [[11, "tempura-model"], [3, "module-lib.tempura.tempura"]], "STKET Model": [[11, "stket-model"], [3, "module-lib.stket.stket"]], "Model Overview": [[11, "model-overview"]], "Model Comparison": [[11, "model-comparison"]], "Performance Comparison": [[11, "performance-comparison"]], "Model Performance on Action Genome (PredCLS)": [[11, "id1"]], "Computational Requirements": [[11, "computational-requirements"], [11, "id2"]], "Model Selection Guidelines": [[11, "model-selection-guidelines"]], "Choose Based on Requirements": [[11, "choose-based-on-requirements"]], "Training Considerations": [[11, "training-considerations"]], "Hyperparameter Tuning": [[11, "hyperparameter-tuning"], [12, "hyperparameter-tuning"]], "Training Strategies": [[11, "training-strategies"], [12, "training-strategies"]], "Model Customization": [[11, "model-customization"]], "Custom Model Development": [[11, "custom-model-development"]], "Transfer Learning": [[11, "transfer-learning"]], "Deployment": [[11, "deployment"]], "Model Export": [[11, "model-export"]], "Optimization": [[11, "optimization"]], "Training Guide": [[12, "training-guide"]], "Training Overview": [[12, "training-overview"]], "Basic Training": [[12, "basic-training"]], "Simple Training Command": [[12, "simple-training-command"]], "Complete Training Command": [[12, "complete-training-command"]], "Training Parameters": [[12, "training-parameters"]], "Core Parameters": [[12, "core-parameters"]], "Essential Training Parameters": [[12, "id1"]], "Advanced Parameters": [[12, "advanced-parameters"]], "Advanced Training Parameters": [[12, "id2"]], "Model-Specific Training": [[12, "model-specific-training"]], "STTran Training": [[12, "sttran-training"]], "Tempura Training": [[12, "tempura-training"]], "SceneLLM Training": [[12, "scenellm-training"]], "Progressive Training": [[12, "progressive-training"]], "Multi-Dataset Training": [[12, "multi-dataset-training"]], "Curriculum Learning": [[12, "curriculum-learning"]], "Monitoring Training": [[12, "monitoring-training"]], "Training Logs": [[12, "training-logs"]], "Early Stopping": [[12, "early-stopping"]], "Optimization Techniques": [[12, "optimization-techniques"]], "Mixed Precision Training": [[12, "mixed-precision-training"]], "Gradient Accumulation": [[12, "gradient-accumulation"]], "Data Parallel Training": [[12, "data-parallel-training"]], "Grid Search": [[12, "grid-search"]], "Random Search": [[12, "random-search"]], "Bayesian Optimization": [[12, "bayesian-optimization"]], "Checkpointing": [[12, "checkpointing"]], "Automatic Checkpointing": [[12, "automatic-checkpointing"]], "Manual Checkpointing": [[12, "manual-checkpointing"]], "Resume Training": [[12, "resume-training"]], "Common Training Issues": [[12, "common-training-issues"]], "Performance Optimization": [[12, "performance-optimization"]], "Best Practices": [[12, "best-practices"]], "Training Workflow": [[12, "training-workflow"]], "Configuration": [[13, "configuration"], [2, "module-lib.config"]], "Usage Guide": [[13, "usage-guide"]], "Basic Training Command": [[13, "basic-training-command"]], "Basic Evaluation Command": [[13, "basic-evaluation-command"]], "Command Line Interface": [[13, "command-line-interface"]], "Training Script (train.py)": [[13, "training-script-train-py"]], "Test Script (test.py)": [[13, "test-script-test-py"]], "Demo Application": [[13, "demo-application"]], "GUI Application": [[13, "gui-application"]], "Scene Graph Generation Modes": [[13, "scene-graph-generation-modes"]], "PredCLS (Predicate Classification)": [[13, "predcls-predicate-classification"]], "SGCLS (Scene Graph Classification)": [[13, "sgcls-scene-graph-classification"]], "SGDET (Scene Graph Detection)": [[13, "sgdet-scene-graph-detection"]], "Model Selection": [[13, "model-selection"]], "Available Models": [[13, "available-models"]], "STTran (Spatial-Temporal Transformer)": [[13, "sttran-spatial-temporal-transformer"]], "Tempura": [[13, "tempura"]], "SceneLLM": [[13, "scenellm"]], "STKET": [[13, "stket"]], "Model Configuration": [[13, "model-configuration"]], "Dataset Configuration": [[13, "dataset-configuration"]], "Output Structure": [[13, "output-structure"]], "Performance Tips": [[13, "performance-tips"]], "Training Optimization": [[13, "training-optimization"]], "Evaluation Optimization": [[13, "evaluation-optimization"]], "Dataloader Module": [[1, "dataloader-module"]], "Action Genome Dataloader": [[1, "module-dataloader.action_genome"]], "EASG Dataloader": [[1, "module-dataloader.easg"]], "Library Module": [[2, "library-module"]], "Object Detection": [[2, "module-lib.object_detector"]], "Utility Functions": [[2, "module-lib.funcs"]], "Word Vectors": [[2, "module-lib.word_vectors"]], "Evaluation": [[2, "module-lib.evaluation_recall"]], "NLP Module": [[2, "nlp-module"]], "FPN Module": [[2, "module-lib.fpn.box_utils"]], "Transformer Components": [[3, "module-lib.transformer"]]}, "indexentries": {"ag (class in dataloader.action_genome)": [[1, "dataloader.action_genome.AG"]], "easg (class in dataloader.easg)": [[1, "dataloader.easg.EASG"]], "__init__() (dataloader.action_genome.ag method)": [[1, "dataloader.action_genome.AG.__init__"]], "__init__() (dataloader.easg.easg method)": [[1, "dataloader.easg.EASG.__init__"]], "cuda_collate_fn() (in module dataloader.action_genome)": [[1, "dataloader.action_genome.cuda_collate_fn"]], "cuda_collate_fn() (in module dataloader.easg)": [[1, "dataloader.easg.cuda_collate_fn"]], "dataloader.action_genome": [[1, "module-dataloader.action_genome"]], "dataloader.easg": [[1, "module-dataloader.easg"]], "module": [[1, "module-dataloader.action_genome"], [1, "module-dataloader.easg"], [2, "module-lib.config"], [2, "module-lib.evaluation_recall"], [2, "module-lib.fpn.box_utils"], [2, "module-lib.funcs"], [2, "module-lib.object_detector"], [2, "module-lib.object_detector_EASG"], [2, "module-lib.word_vectors"], [3, "module-lib.scenellm.llm"], [3, "module-lib.scenellm.network"], [3, "module-lib.scenellm.scenellm"], [3, "module-lib.scenellm.vqvae"], [3, "module-lib.stket.stket"], [3, "module-lib.stket.transformer_stket"], [3, "module-lib.sttran"], [3, "module-lib.sttran_EASG"], [3, "module-lib.tempura.gmm_heads"], [3, "module-lib.tempura.tempura"], [3, "module-lib.tempura.transformer_tempura"], [3, "module-lib.transformer"]], "valid_nums (dataloader.action_genome.ag attribute)": [[1, "dataloader.action_genome.AG.valid_nums"]], "basicscenegraphevaluator (class in lib.evaluation_recall)": [[2, "lib.evaluation_recall.BasicSceneGraphEvaluator"]], "config (class in lib.config)": [[2, "lib.config.Config"]], "__init__() (lib.config.config method)": [[2, "lib.config.Config.__init__"]], "__init__() (lib.evaluation_recall.basicscenegraphevaluator method)": [[2, "lib.evaluation_recall.BasicSceneGraphEvaluator.__init__"]], "__init__() (lib.object_detector.detector method)": [[2, "lib.object_detector.detector.__init__"]], "__init__() (lib.object_detector_easg.detector method)": [[2, "lib.object_detector_EASG.detector.__init__"]], "assign_relations() (in module lib.funcs)": [[2, "lib.funcs.assign_relations"]], "bbox_intersections() (in module lib.fpn.box_utils)": [[2, "lib.fpn.box_utils.bbox_intersections"]], "bbox_loss() (in module lib.fpn.box_utils)": [[2, "lib.fpn.box_utils.bbox_loss"]], "bbox_overlaps() (in module lib.fpn.box_utils)": [[2, "lib.fpn.box_utils.bbox_overlaps"]], "bbox_preds() (in module lib.fpn.box_utils)": [[2, "lib.fpn.box_utils.bbox_preds"]], "calc_mrecall() (lib.evaluation_recall.basicscenegraphevaluator method)": [[2, "lib.evaluation_recall.BasicSceneGraphEvaluator.calc_mrecall"]], "center_size() (in module lib.fpn.box_utils)": [[2, "lib.fpn.box_utils.center_size"]], "clear_word_vector_cache() (in module lib.word_vectors)": [[2, "lib.word_vectors.clear_word_vector_cache"]], "create_ssl_context() (in module lib.word_vectors)": [[2, "lib.word_vectors.create_ssl_context"]], "detector (class in lib.object_detector)": [[2, "lib.object_detector.detector"]], "detector (class in lib.object_detector_easg)": [[2, "lib.object_detector_EASG.detector"]], "download_word_vectors() (in module lib.word_vectors)": [[2, "lib.word_vectors.download_word_vectors"]], "enumerate_by_image() (in module lib.funcs)": [[2, "lib.funcs.enumerate_by_image"]], "evaluate_from_dict() (in module lib.evaluation_recall)": [[2, "lib.evaluation_recall.evaluate_from_dict"]], "evaluate_recall() (in module lib.evaluation_recall)": [[2, "lib.evaluation_recall.evaluate_recall"]], "evaluate_scene_graph() (lib.evaluation_recall.basicscenegraphevaluator method)": [[2, "lib.evaluation_recall.BasicSceneGraphEvaluator.evaluate_scene_graph"]], "forward() (lib.object_detector.detector method)": [[2, "lib.object_detector.detector.forward"]], "forward() (lib.object_detector_easg.detector method)": [[2, "lib.object_detector_EASG.detector.forward"]], "get_cache_path() (in module lib.word_vectors)": [[2, "lib.word_vectors.get_cache_path"]], "get_cache_status() (in module lib.word_vectors)": [[2, "lib.word_vectors.get_cache_status"]], "im_list_to_blob() (in module lib.funcs)": [[2, "lib.funcs.im_list_to_blob"]], "lib.config": [[2, "module-lib.config"]], "lib.evaluation_recall": [[2, "module-lib.evaluation_recall"]], "lib.fpn.box_utils": [[2, "module-lib.fpn.box_utils"]], "lib.funcs": [[2, "module-lib.funcs"]], "lib.object_detector": [[2, "module-lib.object_detector"]], "lib.object_detector_easg": [[2, "module-lib.object_detector_EASG"]], "lib.word_vectors": [[2, "module-lib.word_vectors"]], "load_word_vectors() (in module lib.word_vectors)": [[2, "lib.word_vectors.load_word_vectors"]], "nms_overlaps() (in module lib.fpn.box_utils)": [[2, "lib.fpn.box_utils.nms_overlaps"]], "obj_edge_vectors() (in module lib.word_vectors)": [[2, "lib.word_vectors.obj_edge_vectors"]], "pad_sequence() (in module lib.funcs)": [[2, "lib.funcs.pad_sequence"]], "point_form() (in module lib.fpn.box_utils)": [[2, "lib.fpn.box_utils.point_form"]], "print_stats() (lib.evaluation_recall.basicscenegraphevaluator method)": [[2, "lib.evaluation_recall.BasicSceneGraphEvaluator.print_stats"]], "reporthook() (in module lib.word_vectors)": [[2, "lib.word_vectors.reporthook"]], "reset_result() (lib.evaluation_recall.basicscenegraphevaluator method)": [[2, "lib.evaluation_recall.BasicSceneGraphEvaluator.reset_result"]], "setup_parser() (lib.config.config method)": [[2, "lib.config.Config.setup_parser"]], "training (lib.object_detector.detector attribute)": [[2, "lib.object_detector.detector.training"]], "training (lib.object_detector_easg.detector attribute)": [[2, "lib.object_detector_EASG.detector.training"]], "transpose_packed_sequence_inds() (in module lib.funcs)": [[2, "lib.funcs.transpose_packed_sequence_inds"]], "verb_edge_vectors() (in module lib.word_vectors)": [[2, "lib.word_vectors.verb_edge_vectors"]], "actionclassifier (class in lib.sttran_easg)": [[3, "lib.sttran_EASG.ActionClassifier"]], "gmm_head (class in lib.tempura.gmm_heads)": [[3, "lib.tempura.gmm_heads.GMM_head"]], "otcodebookupdater (class in lib.scenellm.scenellm)": [[3, "lib.scenellm.scenellm.OTCodebookUpdater"]], "objectclassifier (class in lib.stket.stket)": [[3, "lib.stket.stket.ObjectClassifier"]], "objectclassifier (class in lib.sttran)": [[3, "lib.sttran.ObjectClassifier"]], "objectclassifier (class in lib.sttran_easg)": [[3, "lib.sttran_EASG.ObjectClassifier"]], "objectclassifier (class in lib.tempura.tempura)": [[3, "lib.tempura.tempura.ObjectClassifier"]], "positionalencoding (class in lib.tempura.tempura)": [[3, "lib.tempura.tempura.PositionalEncoding"]], "sggdecoder (class in lib.scenellm.network)": [[3, "lib.scenellm.network.SGGDecoder"]], "sggdecoder (class in lib.scenellm.scenellm)": [[3, "lib.scenellm.scenellm.SGGDecoder"]], "sia (class in lib.scenellm.scenellm)": [[3, "lib.scenellm.scenellm.SIA"]], "stket (class in lib.stket.stket)": [[3, "lib.stket.stket.STKET"]], "stket (class in lib.sttran)": [[3, "lib.sttran.STKET"]], "sttran (class in lib.sttran)": [[3, "lib.sttran.STTran"]], "sttran (class in lib.sttran_easg)": [[3, "lib.sttran_EASG.STTran"]], "scenellm (class in lib.scenellm.network)": [[3, "lib.scenellm.network.SceneLLM"]], "scenellm (class in lib.scenellm.scenellm)": [[3, "lib.scenellm.scenellm.SceneLLM"]], "scenellmlora (class in lib.scenellm.llm)": [[3, "lib.scenellm.llm.SceneLLMLoRA"]], "scenellmlora (class in lib.scenellm.scenellm)": [[3, "lib.scenellm.scenellm.SceneLLMLoRA"]], "tempura (class in lib.tempura.tempura)": [[3, "lib.tempura.tempura.TEMPURA"]], "transformerdecoder (class in lib.stket.transformer_stket)": [[3, "lib.stket.transformer_stket.TransformerDecoder"]], "transformerdecoder (class in lib.tempura.transformer_tempura)": [[3, "lib.tempura.transformer_tempura.TransformerDecoder"]], "transformerdecoder (class in lib.transformer)": [[3, "lib.transformer.TransformerDecoder"]], "transformerdecoderlayer (class in lib.stket.transformer_stket)": [[3, "lib.stket.transformer_stket.TransformerDecoderLayer"]], "transformerdecoderlayer (class in lib.tempura.transformer_tempura)": [[3, "lib.tempura.transformer_tempura.TransformerDecoderLayer"]], "transformerdecoderlayer (class in lib.transformer)": [[3, "lib.transformer.TransformerDecoderLayer"]], "transformerencoder (class in lib.stket.transformer_stket)": [[3, "lib.stket.transformer_stket.TransformerEncoder"]], "transformerencoder (class in lib.tempura.transformer_tempura)": [[3, "lib.tempura.transformer_tempura.TransformerEncoder"]], "transformerencoder (class in lib.transformer)": [[3, "lib.transformer.TransformerEncoder"]], "transformerencoderlayer (class in lib.stket.transformer_stket)": [[3, "lib.stket.transformer_stket.TransformerEncoderLayer"]], "transformerencoderlayer (class in lib.tempura.transformer_tempura)": [[3, "lib.tempura.transformer_tempura.TransformerEncoderLayer"]], "transformerencoderlayer (class in lib.transformer)": [[3, "lib.transformer.TransformerEncoderLayer"]], "vqvaequantizer (class in lib.scenellm.scenellm)": [[3, "lib.scenellm.scenellm.VQVAEQuantizer"]], "vqvaequantizer (class in lib.scenellm.vqvae)": [[3, "lib.scenellm.vqvae.VQVAEQuantizer"]], "__init__() (lib.scenellm.llm.scenellmlora method)": [[3, "lib.scenellm.llm.SceneLLMLoRA.__init__"]], "__init__() (lib.scenellm.network.sggdecoder method)": [[3, "lib.scenellm.network.SGGDecoder.__init__"]], "__init__() (lib.scenellm.network.scenellm method)": [[3, "lib.scenellm.network.SceneLLM.__init__"]], "__init__() (lib.scenellm.scenellm.otcodebookupdater method)": [[3, "lib.scenellm.scenellm.OTCodebookUpdater.__init__"]], "__init__() (lib.scenellm.scenellm.sggdecoder method)": [[3, "lib.scenellm.scenellm.SGGDecoder.__init__"]], "__init__() (lib.scenellm.scenellm.sia method)": [[3, "lib.scenellm.scenellm.SIA.__init__"]], "__init__() (lib.scenellm.scenellm.scenellm method)": [[3, "lib.scenellm.scenellm.SceneLLM.__init__"]], "__init__() (lib.scenellm.scenellm.scenellmlora method)": [[3, "lib.scenellm.scenellm.SceneLLMLoRA.__init__"]], "__init__() (lib.scenellm.scenellm.vqvaequantizer method)": [[3, "lib.scenellm.scenellm.VQVAEQuantizer.__init__"]], "__init__() (lib.scenellm.vqvae.vqvaequantizer method)": [[3, "lib.scenellm.vqvae.VQVAEQuantizer.__init__"]], "__init__() (lib.stket.stket.objectclassifier method)": [[3, "lib.stket.stket.ObjectClassifier.__init__"]], "__init__() (lib.stket.stket.stket method)": [[3, "lib.stket.stket.STKET.__init__"]], "__init__() (lib.stket.transformer_stket.transformerdecoder method)": [[3, "lib.stket.transformer_stket.TransformerDecoder.__init__"]], "__init__() (lib.stket.transformer_stket.transformerdecoderlayer method)": [[3, "lib.stket.transformer_stket.TransformerDecoderLayer.__init__"]], "__init__() (lib.stket.transformer_stket.transformerencoder method)": [[3, "lib.stket.transformer_stket.TransformerEncoder.__init__"]], "__init__() (lib.stket.transformer_stket.transformerencoderlayer method)": [[3, "lib.stket.transformer_stket.TransformerEncoderLayer.__init__"]], "__init__() (lib.stket.transformer_stket.ensemble_decoder method)": [[3, "lib.stket.transformer_stket.ensemble_decoder.__init__"]], "__init__() (lib.stket.transformer_stket.spatial_encoder method)": [[3, "lib.stket.transformer_stket.spatial_encoder.__init__"]], "__init__() (lib.stket.transformer_stket.temporal_decoder method)": [[3, "lib.stket.transformer_stket.temporal_decoder.__init__"]], "__init__() (lib.sttran.objectclassifier method)": [[3, "lib.sttran.ObjectClassifier.__init__"]], "__init__() (lib.sttran.stket method)": [[3, "lib.sttran.STKET.__init__"]], "__init__() (lib.sttran.sttran method)": [[3, "lib.sttran.STTran.__init__"]], "__init__() (lib.sttran_easg.actionclassifier method)": [[3, "lib.sttran_EASG.ActionClassifier.__init__"]], "__init__() (lib.sttran_easg.objectclassifier method)": [[3, "lib.sttran_EASG.ObjectClassifier.__init__"]], "__init__() (lib.sttran_easg.sttran method)": [[3, "lib.sttran_EASG.STTran.__init__"]], "__init__() (lib.tempura.gmm_heads.gmm_head method)": [[3, "lib.tempura.gmm_heads.GMM_head.__init__"]], "__init__() (lib.tempura.tempura.objectclassifier method)": [[3, "lib.tempura.tempura.ObjectClassifier.__init__"]], "__init__() (lib.tempura.tempura.positionalencoding method)": [[3, "lib.tempura.tempura.PositionalEncoding.__init__"]], "__init__() (lib.tempura.tempura.tempura method)": [[3, "lib.tempura.tempura.TEMPURA.__init__"]], "__init__() (lib.tempura.transformer_tempura.transformerdecoder method)": [[3, "lib.tempura.transformer_tempura.TransformerDecoder.__init__"]], "__init__() (lib.tempura.transformer_tempura.transformerdecoderlayer method)": [[3, "lib.tempura.transformer_tempura.TransformerDecoderLayer.__init__"]], "__init__() (lib.tempura.transformer_tempura.transformerencoder method)": [[3, "lib.tempura.transformer_tempura.TransformerEncoder.__init__"]], "__init__() (lib.tempura.transformer_tempura.transformerencoderlayer method)": [[3, "lib.tempura.transformer_tempura.TransformerEncoderLayer.__init__"]], "__init__() (lib.tempura.transformer_tempura.transformer method)": [[3, "lib.tempura.transformer_tempura.transformer.__init__"]], "__init__() (lib.transformer.transformerdecoder method)": [[3, "lib.transformer.TransformerDecoder.__init__"]], "__init__() (lib.transformer.transformerdecoderlayer method)": [[3, "lib.transformer.TransformerDecoderLayer.__init__"]], "__init__() (lib.transformer.transformerencoder method)": [[3, "lib.transformer.TransformerEncoder.__init__"]], "__init__() (lib.transformer.transformerencoderlayer method)": [[3, "lib.transformer.TransformerEncoderLayer.__init__"]], "__init__() (lib.transformer.transformer method)": [[3, "lib.transformer.transformer.__init__"]], "build_hierarchical_graph() (in module lib.scenellm.scenellm)": [[3, "lib.scenellm.scenellm.build_hierarchical_graph"]], "classify() (lib.tempura.tempura.objectclassifier method)": [[3, "lib.tempura.tempura.ObjectClassifier.classify"]], "clean_class() (lib.stket.stket.objectclassifier method)": [[3, "lib.stket.stket.ObjectClassifier.clean_class"]], "clean_class() (lib.sttran.objectclassifier method)": [[3, "lib.sttran.ObjectClassifier.clean_class"]], "clean_class() (lib.tempura.tempura.objectclassifier method)": [[3, "lib.tempura.tempura.ObjectClassifier.clean_class"]], "ensemble_decoder (class in lib.stket.transformer_stket)": [[3, "lib.stket.transformer_stket.ensemble_decoder"]], "forward() (lib.scenellm.llm.scenellmlora method)": [[3, "lib.scenellm.llm.SceneLLMLoRA.forward"]], "forward() (lib.scenellm.network.sggdecoder method)": [[3, "lib.scenellm.network.SGGDecoder.forward"]], "forward() (lib.scenellm.network.scenellm method)": [[3, "lib.scenellm.network.SceneLLM.forward"]], "forward() (lib.scenellm.scenellm.sggdecoder method)": [[3, "lib.scenellm.scenellm.SGGDecoder.forward"]], "forward() (lib.scenellm.scenellm.sia method)": [[3, "lib.scenellm.scenellm.SIA.forward"]], "forward() (lib.scenellm.scenellm.scenellm method)": [[3, "lib.scenellm.scenellm.SceneLLM.forward"]], "forward() (lib.scenellm.scenellm.scenellmlora method)": [[3, "lib.scenellm.scenellm.SceneLLMLoRA.forward"]], "forward() (lib.scenellm.scenellm.vqvaequantizer method)": [[3, "lib.scenellm.scenellm.VQVAEQuantizer.forward"]], "forward() (lib.scenellm.vqvae.vqvaequantizer method)": [[3, "lib.scenellm.vqvae.VQVAEQuantizer.forward"]], "forward() (lib.stket.stket.objectclassifier method)": [[3, "lib.stket.stket.ObjectClassifier.forward"]], "forward() (lib.stket.stket.stket method)": [[3, "lib.stket.stket.STKET.forward"]], "forward() (lib.stket.transformer_stket.transformerdecoder method)": [[3, "lib.stket.transformer_stket.TransformerDecoder.forward"]], "forward() (lib.stket.transformer_stket.transformerdecoderlayer method)": [[3, "lib.stket.transformer_stket.TransformerDecoderLayer.forward"]], "forward() (lib.stket.transformer_stket.transformerencoder method)": [[3, "lib.stket.transformer_stket.TransformerEncoder.forward"]], "forward() (lib.stket.transformer_stket.transformerencoderlayer method)": [[3, "lib.stket.transformer_stket.TransformerEncoderLayer.forward"]], "forward() (lib.stket.transformer_stket.ensemble_decoder method)": [[3, "lib.stket.transformer_stket.ensemble_decoder.forward"]], "forward() (lib.stket.transformer_stket.spatial_encoder method)": [[3, "lib.stket.transformer_stket.spatial_encoder.forward"]], "forward() (lib.stket.transformer_stket.temporal_decoder method)": [[3, "lib.stket.transformer_stket.temporal_decoder.forward"]], "forward() (lib.sttran.objectclassifier method)": [[3, "lib.sttran.ObjectClassifier.forward"]], "forward() (lib.sttran.stket method)": [[3, "lib.sttran.STKET.forward"]], "forward() (lib.sttran.sttran method)": [[3, "lib.sttran.STTran.forward"]], "forward() (lib.sttran_easg.actionclassifier method)": [[3, "lib.sttran_EASG.ActionClassifier.forward"]], "forward() (lib.sttran_easg.objectclassifier method)": [[3, "lib.sttran_EASG.ObjectClassifier.forward"]], "forward() (lib.sttran_easg.sttran method)": [[3, "lib.sttran_EASG.STTran.forward"]], "forward() (lib.tempura.gmm_heads.gmm_head method)": [[3, "lib.tempura.gmm_heads.GMM_head.forward"]], "forward() (lib.tempura.tempura.objectclassifier method)": [[3, "lib.tempura.tempura.ObjectClassifier.forward"]], "forward() (lib.tempura.tempura.positionalencoding method)": [[3, "lib.tempura.tempura.PositionalEncoding.forward"]], "forward() (lib.tempura.tempura.tempura method)": [[3, "lib.tempura.tempura.TEMPURA.forward"]], "forward() (lib.tempura.transformer_tempura.transformerdecoder method)": [[3, "lib.tempura.transformer_tempura.TransformerDecoder.forward"]], "forward() (lib.tempura.transformer_tempura.transformerdecoderlayer method)": [[3, "lib.tempura.transformer_tempura.TransformerDecoderLayer.forward"]], "forward() (lib.tempura.transformer_tempura.transformerencoder method)": [[3, "lib.tempura.transformer_tempura.TransformerEncoder.forward"]], "forward() (lib.tempura.transformer_tempura.transformerencoderlayer method)": [[3, "lib.tempura.transformer_tempura.TransformerEncoderLayer.forward"]], "forward() (lib.tempura.transformer_tempura.transformer method)": [[3, "lib.tempura.transformer_tempura.transformer.forward"]], "forward() (lib.transformer.transformerdecoder method)": [[3, "lib.transformer.TransformerDecoder.forward"]], "forward() (lib.transformer.transformerdecoderlayer method)": [[3, "lib.transformer.TransformerDecoderLayer.forward"]], "forward() (lib.transformer.transformerencoder method)": [[3, "lib.transformer.TransformerEncoder.forward"]], "forward() (lib.transformer.transformerencoderlayer method)": [[3, "lib.transformer.TransformerEncoderLayer.forward"]], "forward() (lib.transformer.transformer method)": [[3, "lib.transformer.transformer.forward"]], "get_usage_histogram() (lib.scenellm.scenellm.vqvaequantizer method)": [[3, "lib.scenellm.scenellm.VQVAEQuantizer.get_usage_histogram"]], "get_usage_histogram() (lib.scenellm.vqvae.vqvaequantizer method)": [[3, "lib.scenellm.vqvae.VQVAEQuantizer.get_usage_histogram"]], "lib.scenellm.llm": [[3, "module-lib.scenellm.llm"]], "lib.scenellm.network": [[3, "module-lib.scenellm.network"]], "lib.scenellm.scenellm": [[3, "module-lib.scenellm.scenellm"]], "lib.scenellm.vqvae": [[3, "module-lib.scenellm.vqvae"]], "lib.stket.stket": [[3, "module-lib.stket.stket"]], "lib.stket.transformer_stket": [[3, "module-lib.stket.transformer_stket"]], "lib.sttran": [[3, "module-lib.sttran"]], "lib.sttran_easg": [[3, "module-lib.sttran_EASG"]], "lib.tempura.gmm_heads": [[3, "module-lib.tempura.gmm_heads"]], "lib.tempura.tempura": [[3, "module-lib.tempura.tempura"]], "lib.tempura.transformer_tempura": [[3, "module-lib.tempura.transformer_tempura"]], "lib.transformer": [[3, "module-lib.transformer"]], "mem_selection() (lib.tempura.tempura.objectclassifier method)": [[3, "lib.tempura.tempura.ObjectClassifier.mem_selection"]], "mem_selection() (lib.tempura.transformer_tempura.transformer method)": [[3, "lib.tempura.transformer_tempura.transformer.mem_selection"]], "memory_hallucinator() (lib.tempura.tempura.objectclassifier method)": [[3, "lib.tempura.tempura.ObjectClassifier.memory_hallucinator"]], "memory_hallucinator() (lib.tempura.transformer_tempura.transformer method)": [[3, "lib.tempura.transformer_tempura.transformer.memory_hallucinator"]], "reset_usage_count() (lib.scenellm.scenellm.vqvaequantizer method)": [[3, "lib.scenellm.scenellm.VQVAEQuantizer.reset_usage_count"]], "reset_usage_count() (lib.scenellm.vqvae.vqvaequantizer method)": [[3, "lib.scenellm.vqvae.VQVAEQuantizer.reset_usage_count"]], "set_training_stage() (lib.scenellm.network.scenellm method)": [[3, "lib.scenellm.network.SceneLLM.set_training_stage"]], "set_training_stage() (lib.scenellm.scenellm.scenellm method)": [[3, "lib.scenellm.scenellm.SceneLLM.set_training_stage"]], "spatial_encoder (class in lib.stket.transformer_stket)": [[3, "lib.stket.transformer_stket.spatial_encoder"]], "temporal_decoder (class in lib.stket.transformer_stket)": [[3, "lib.stket.transformer_stket.temporal_decoder"]], "training (lib.scenellm.llm.scenellmlora attribute)": [[3, "lib.scenellm.llm.SceneLLMLoRA.training"]], "training (lib.scenellm.network.sggdecoder attribute)": [[3, "lib.scenellm.network.SGGDecoder.training"]], "training (lib.scenellm.network.scenellm attribute)": [[3, "lib.scenellm.network.SceneLLM.training"]], "training (lib.scenellm.scenellm.sggdecoder attribute)": [[3, "lib.scenellm.scenellm.SGGDecoder.training"]], "training (lib.scenellm.scenellm.sia attribute)": [[3, "lib.scenellm.scenellm.SIA.training"]], "training (lib.scenellm.scenellm.scenellm attribute)": [[3, "lib.scenellm.scenellm.SceneLLM.training"]], "training (lib.scenellm.scenellm.scenellmlora attribute)": [[3, "lib.scenellm.scenellm.SceneLLMLoRA.training"]], "training (lib.scenellm.scenellm.vqvaequantizer attribute)": [[3, "lib.scenellm.scenellm.VQVAEQuantizer.training"]], "training (lib.scenellm.vqvae.vqvaequantizer attribute)": [[3, "lib.scenellm.vqvae.VQVAEQuantizer.training"]], "training (lib.stket.stket.objectclassifier attribute)": [[3, "lib.stket.stket.ObjectClassifier.training"]], "training (lib.stket.stket.stket attribute)": [[3, "lib.stket.stket.STKET.training"]], "training (lib.stket.transformer_stket.transformerdecoder attribute)": [[3, "lib.stket.transformer_stket.TransformerDecoder.training"]], "training (lib.stket.transformer_stket.transformerdecoderlayer attribute)": [[3, "lib.stket.transformer_stket.TransformerDecoderLayer.training"]], "training (lib.stket.transformer_stket.transformerencoder attribute)": [[3, "lib.stket.transformer_stket.TransformerEncoder.training"]], "training (lib.stket.transformer_stket.transformerencoderlayer attribute)": [[3, "lib.stket.transformer_stket.TransformerEncoderLayer.training"]], "training (lib.stket.transformer_stket.ensemble_decoder attribute)": [[3, "lib.stket.transformer_stket.ensemble_decoder.training"]], "training (lib.stket.transformer_stket.spatial_encoder attribute)": [[3, "lib.stket.transformer_stket.spatial_encoder.training"]], "training (lib.stket.transformer_stket.temporal_decoder attribute)": [[3, "lib.stket.transformer_stket.temporal_decoder.training"]], "training (lib.sttran.objectclassifier attribute)": [[3, "lib.sttran.ObjectClassifier.training"]], "training (lib.sttran.stket attribute)": [[3, "lib.sttran.STKET.training"]], "training (lib.sttran.sttran attribute)": [[3, "lib.sttran.STTran.training"]], "training (lib.sttran_easg.actionclassifier attribute)": [[3, "lib.sttran_EASG.ActionClassifier.training"]], "training (lib.sttran_easg.objectclassifier attribute)": [[3, "lib.sttran_EASG.ObjectClassifier.training"]], "training (lib.sttran_easg.sttran attribute)": [[3, "lib.sttran_EASG.STTran.training"]], "training (lib.tempura.gmm_heads.gmm_head attribute)": [[3, "lib.tempura.gmm_heads.GMM_head.training"]], "training (lib.tempura.tempura.objectclassifier attribute)": [[3, "lib.tempura.tempura.ObjectClassifier.training"]], "training (lib.tempura.tempura.positionalencoding attribute)": [[3, "lib.tempura.tempura.PositionalEncoding.training"]], "training (lib.tempura.tempura.tempura attribute)": [[3, "lib.tempura.tempura.TEMPURA.training"]], "training (lib.tempura.transformer_tempura.transformerdecoder attribute)": [[3, "lib.tempura.transformer_tempura.TransformerDecoder.training"]], "training (lib.tempura.transformer_tempura.transformerdecoderlayer attribute)": [[3, "lib.tempura.transformer_tempura.TransformerDecoderLayer.training"]], "training (lib.tempura.transformer_tempura.transformerencoder attribute)": [[3, "lib.tempura.transformer_tempura.TransformerEncoder.training"]], "training (lib.tempura.transformer_tempura.transformerencoderlayer attribute)": [[3, "lib.tempura.transformer_tempura.TransformerEncoderLayer.training"]], "training (lib.tempura.transformer_tempura.transformer attribute)": [[3, "lib.tempura.transformer_tempura.transformer.training"]], "training (lib.transformer.transformerdecoder attribute)": [[3, "lib.transformer.TransformerDecoder.training"]], "training (lib.transformer.transformerdecoderlayer attribute)": [[3, "lib.transformer.TransformerDecoderLayer.training"]], "training (lib.transformer.transformerencoder attribute)": [[3, "lib.transformer.TransformerEncoder.training"]], "training (lib.transformer.transformerencoderlayer attribute)": [[3, "lib.transformer.TransformerEncoderLayer.training"]], "training (lib.transformer.transformer attribute)": [[3, "lib.transformer.transformer.training"]], "transformer (class in lib.tempura.transformer_tempura)": [[3, "lib.tempura.transformer_tempura.transformer"]], "transformer (class in lib.transformer)": [[3, "lib.transformer.transformer"]], "uncertainty() (lib.tempura.gmm_heads.gmm_head method)": [[3, "lib.tempura.gmm_heads.GMM_head.uncertainty"]], "update() (lib.scenellm.scenellm.otcodebookupdater method)": [[3, "lib.scenellm.scenellm.OTCodebookUpdater.update"]], "update_codebook() (lib.scenellm.scenellm.vqvaequantizer method)": [[3, "lib.scenellm.scenellm.VQVAEQuantizer.update_codebook"]], "update_codebook() (lib.scenellm.vqvae.vqvaequantizer method)": [[3, "lib.scenellm.vqvae.VQVAEQuantizer.update_codebook"]], "update_codebook_with_ot() (lib.scenellm.network.scenellm method)": [[3, "lib.scenellm.network.SceneLLM.update_codebook_with_ot"]], "update_codebook_with_ot() (lib.scenellm.scenellm.scenellm method)": [[3, "lib.scenellm.scenellm.SceneLLM.update_codebook_with_ot"]]}})